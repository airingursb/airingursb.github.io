<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Airing的博客</title>
  <subtitle>我是一只小小小小熊</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://ursb.me/"/>
  <updated>2016-08-12T11:06:15.000Z</updated>
  <id>http://ursb.me/</id>
  
  <author>
    <name>Airing</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【慕课】App后台极速开发（9）——Dao层的实现</title>
    <link href="http://ursb.me/2016/08/12/%E3%80%90%E6%85%95%E8%AF%BE%E3%80%91App%E5%90%8E%E5%8F%B0%E6%9E%81%E9%80%9F%E5%BC%80%E5%8F%91%EF%BC%889%EF%BC%89%E2%80%94%E2%80%94Dao%E5%B1%82%E7%9A%84%E5%AE%9E%E7%8E%B0/"/>
    <id>http://ursb.me/2016/08/12/【慕课】App后台极速开发（9）——Dao层的实现/</id>
    <published>2016-08-12T03:21:23.000Z</published>
    <updated>2016-08-12T11:06:15.000Z</updated>
    
    <content type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;div id=&quot;dplayer2016081109&quot; class=&quot;dplayer&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;script&gt;
var option = {
    element: document.getElementById(&#39;dplayer2016081109&#39;),                          
    autoplay: false,                                                      
    theme: &#39;#FADFA3&#39;,                                                      
    loop: true,                                                        
    video: {
        url: &#39;http://qiniu.ursb.me/video/mooc/mooc0109.mp4&#39;, 
        pic: &#39;http://qiniu.ursb.me/image/app%E5%90%8E%E5%8F%B0%E6%9E%81%E9%80%9F%E5%BC%80%E5%8F%91pic9.png&#39;
    },
    danmaku: {  
        id: &#39;2016081109&#39;,
        api: &#39;https://dplayer.daoapp.io/&#39;,
        token: &#39;tokendemo&#39;,
        maximum: 1000
    }
}

var dp = new DPlayer(option);
dp.init();

&lt;/script&gt;


&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;blockquote&gt;
&lt;p&gt;本视频为 Airing 独立制作，部分为熊猫TV直播时的录屏素材（房间号480538），非授权禁止使用。&lt;br&gt;若有技术交流或关注，欢迎加入Q群：小熊的编程教室（Q群号464785930）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;因为该慕课视频挂在自己的七牛云下，需要支付高额的流量费用，所以希望看官们可以支付宝扫码捐助一下，那就是给我的莫大的支持与鼓励了！！&lt;/strong&gt;&lt;br&gt;一元也可哦~&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://7xkcl8.com1.z0.glb.clouddn.com/ursbzhifubao.png-zfb.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;div id=&quot;dplayer2016081109&quot; class=&quot;dplayer&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;script&gt;
var option = {
    element: document.getElementById(&#39;dplayer2016081109&#39;),                          
    autoplay: false,                                                      
    theme: &#39;#FADFA3&#39;,                                                      
    loop: true,                                                        
    video: {
        url: &#39;http://qiniu.ursb.me/video/mooc/mooc0109.mp4&#39;, 
        pic: &#39;http://qiniu.ursb.me/image/app%E5%90%8E%E5%8F%B0%E6%9E%81%E9%80%9F%E5%BC%80%E5%8F%91pic9.png&#39;
    },
    danmaku: {  
        id: &#39;2016081109&#39;,
        api: &#39;https://dplayer.daoapp.io/&#39;,
        token: &#39;tokendemo&#39;,
        maximum: 1000
    }
}

var dp = new DPlayer(option);
dp.init();

&lt;/script&gt;
    
    </summary>
    
      <category term="技术" scheme="http://ursb.me/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="慕课" scheme="http://ursb.me/tags/%E6%85%95%E8%AF%BE/"/>
    
      <category term="后端开发" scheme="http://ursb.me/tags/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>【慕课】App后台极速开发（8）——安装框架</title>
    <link href="http://ursb.me/2016/08/11/%E3%80%90%E6%85%95%E8%AF%BE%E3%80%91App%E5%90%8E%E5%8F%B0%E6%9E%81%E9%80%9F%E5%BC%80%E5%8F%91%EF%BC%888%EF%BC%89%E2%80%94%E2%80%94%E5%AE%89%E8%A3%85%E6%A1%86%E6%9E%B6/"/>
    <id>http://ursb.me/2016/08/11/【慕课】App后台极速开发（8）——安装框架/</id>
    <published>2016-08-11T11:47:41.000Z</published>
    <updated>2016-08-11T15:13:41.000Z</updated>
    
    <content type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;div id=&quot;dplayer2016081108&quot; class=&quot;dplayer&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;script&gt;
var option = {
    element: document.getElementById(&#39;dplayer2016081108&#39;),                          
    autoplay: false,                                                      
    theme: &#39;#FADFA3&#39;,                                                      
    loop: true,                                                        
    video: {
        url: &#39;http://qiniu.ursb.me/video/mooc/mooc0108.mp4&#39;, 
        pic: &#39;http://qiniu.ursb.me/image/app%E5%90%8E%E5%8F%B0%E6%9E%81%E9%80%9F%E5%BC%80%E5%8F%91pic8.png&#39;
    },
    danmaku: {  
        id: &#39;2016081108&#39;,
        api: &#39;http://airingursb-dplayer.daoapp.io&#39;,
        token: &#39;tokendemo&#39;,
        maximum: 1000
    }
}

var dp = new DPlayer(option);
dp.init();

&lt;/script&gt;


&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;blockquote&gt;
&lt;p&gt;本视频为 Airing 独立制作，部分为熊猫TV直播时的录屏素材（房间号480538），非授权禁止使用。&lt;br&gt;若有技术交流或关注，欢迎加入Q群：小熊的编程教室（Q群号464785930）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;因为该慕课视频挂在自己的七牛云下，需要支付高额的流量费用，所以希望看官们可以支付宝扫码捐助一下，那就是给我的莫大的支持与鼓励了！！&lt;/strong&gt;&lt;br&gt;一元也可哦~&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://7xkcl8.com1.z0.glb.clouddn.com/ursbzhifubao.png-zfb.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;div id=&quot;dplayer2016081108&quot; class=&quot;dplayer&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;script&gt;
var option = {
    element: document.getElementById(&#39;dplayer2016081108&#39;),                          
    autoplay: false,                                                      
    theme: &#39;#FADFA3&#39;,                                                      
    loop: true,                                                        
    video: {
        url: &#39;http://qiniu.ursb.me/video/mooc/mooc0108.mp4&#39;, 
        pic: &#39;http://qiniu.ursb.me/image/app%E5%90%8E%E5%8F%B0%E6%9E%81%E9%80%9F%E5%BC%80%E5%8F%91pic8.png&#39;
    },
    danmaku: {  
        id: &#39;2016081108&#39;,
        api: &#39;http://airingursb-dplayer.daoapp.io&#39;,
        token: &#39;tokendemo&#39;,
        maximum: 1000
    }
}

var dp = new DPlayer(option);
dp.init();

&lt;/script&gt;
    
    </summary>
    
      <category term="技术" scheme="http://ursb.me/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="慕课" scheme="http://ursb.me/tags/%E6%85%95%E8%AF%BE/"/>
    
      <category term="后端开发" scheme="http://ursb.me/tags/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>【慕课】App后台极速开发（7）——接口文档</title>
    <link href="http://ursb.me/2016/08/11/%E3%80%90%E6%85%95%E8%AF%BE%E3%80%91App%E5%90%8E%E5%8F%B0%E6%9E%81%E9%80%9F%E5%BC%80%E5%8F%91%EF%BC%887%EF%BC%89%E2%80%94%E2%80%94%E6%8E%A5%E5%8F%A3%E6%96%87%E6%A1%A3/"/>
    <id>http://ursb.me/2016/08/11/【慕课】App后台极速开发（7）——接口文档/</id>
    <published>2016-08-11T11:47:28.000Z</published>
    <updated>2016-08-12T11:06:24.000Z</updated>
    
    <content type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;div id=&quot;dplayer2016081107&quot; class=&quot;dplayer&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;script&gt;
var option = {
    element: document.getElementById(&#39;dplayer2016081107&#39;),                          
    autoplay: false,                                                      
    theme: &#39;#FADFA3&#39;,                                                      
    loop: true,                                                        
    video: {
        url: &#39;http://qiniu.ursb.me/video/mooc/mooc0107.mp4&#39;, 
        pic: &#39;http://qiniu.ursb.me/image/app%E5%90%8E%E5%8F%B0%E6%9E%81%E9%80%9F%E5%BC%80%E5%8F%91pic7.png&#39;
    },
    danmaku: {  
        id: &#39;2016081107&#39;,
        api: &#39;https://dplayer.daoapp.io/&#39;,
        token: &#39;tokendemo&#39;,
        maximum: 1000
    }
}

var dp = new DPlayer(option);
dp.init();


&lt;/script&gt;

&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;blockquote&gt;
&lt;p&gt;本视频为 Airing 独立制作，部分为熊猫TV直播时的录屏素材（房间号480538），非授权禁止使用。&lt;br&gt;若有技术交流或关注，欢迎加入Q群：小熊的编程教室（Q群号464785930）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;因为该慕课视频挂在自己的七牛云下，需要支付高额的流量费用，所以希望看官们可以支付宝扫码捐助一下，那就是给我的莫大的支持与鼓励了！！&lt;/strong&gt;&lt;br&gt;一元也可哦~&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://7xkcl8.com1.z0.glb.clouddn.com/ursbzhifubao.png-zfb.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;div id=&quot;dplayer2016081107&quot; class=&quot;dplayer&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;script&gt;
var option = {
    element: document.getElementById(&#39;dplayer2016081107&#39;),                          
    autoplay: false,                                                      
    theme: &#39;#FADFA3&#39;,                                                      
    loop: true,                                                        
    video: {
        url: &#39;http://qiniu.ursb.me/video/mooc/mooc0107.mp4&#39;, 
        pic: &#39;http://qiniu.ursb.me/image/app%E5%90%8E%E5%8F%B0%E6%9E%81%E9%80%9F%E5%BC%80%E5%8F%91pic7.png&#39;
    },
    danmaku: {  
        id: &#39;2016081107&#39;,
        api: &#39;https://dplayer.daoapp.io/&#39;,
        token: &#39;tokendemo&#39;,
        maximum: 1000
    }
}

var dp = new DPlayer(option);
dp.init();


&lt;/script&gt;
    
    </summary>
    
      <category term="技术" scheme="http://ursb.me/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="慕课" scheme="http://ursb.me/tags/%E6%85%95%E8%AF%BE/"/>
    
      <category term="后端开发" scheme="http://ursb.me/tags/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>【慕课】App后台极速开发（6）——数据库设计</title>
    <link href="http://ursb.me/2016/08/11/%E3%80%90%E6%85%95%E8%AF%BE%E3%80%91App%E5%90%8E%E5%8F%B0%E6%9E%81%E9%80%9F%E5%BC%80%E5%8F%91%EF%BC%886%EF%BC%89%E2%80%94%E2%80%94%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1/"/>
    <id>http://ursb.me/2016/08/11/【慕课】App后台极速开发（6）——数据库设计/</id>
    <published>2016-08-11T11:47:16.000Z</published>
    <updated>2016-08-11T15:13:54.000Z</updated>
    
    <content type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;div id=&quot;dplayer2016081106&quot; class=&quot;dplayer&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;script&gt;
var option = {
    element: document.getElementById(&#39;dplayer2016081106&#39;),                          
    autoplay: false,                                                      
    theme: &#39;#FADFA3&#39;,                                                      
    loop: true,                                                        
    video: {
        url: &#39;http://qiniu.ursb.me/video/mooc/mooc0106.mp4&#39;, 
        pic: &#39;http://qiniu.ursb.me/image/app%E5%90%8E%E5%8F%B0%E6%9E%81%E9%80%9F%E5%BC%80%E5%8F%91pic6.png&#39;
    },
    danmaku: {  
        id: &#39;2016081106&#39;,
        api: &#39;http://airingursb-dplayer.daoapp.io&#39;,
        token: &#39;tokendemo&#39;,
        maximum: 1000
    }
}

var dp = new DPlayer(option);
dp.init();


&lt;/script&gt;

&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;blockquote&gt;
&lt;p&gt;本视频为 Airing 独立制作，部分为熊猫TV直播时的录屏素材（房间号480538），非授权禁止使用。&lt;br&gt;若有技术交流或关注，欢迎加入Q群：小熊的编程教室（Q群号464785930）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;因为该慕课视频挂在自己的七牛云下，需要支付高额的流量费用，所以希望看官们可以支付宝扫码捐助一下，那就是给我的莫大的支持与鼓励了！！&lt;/strong&gt;&lt;br&gt;一元也可哦~&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://7xkcl8.com1.z0.glb.clouddn.com/ursbzhifubao.png-zfb.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;div id=&quot;dplayer2016081106&quot; class=&quot;dplayer&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;script&gt;
var option = {
    element: document.getElementById(&#39;dplayer2016081106&#39;),                          
    autoplay: false,                                                      
    theme: &#39;#FADFA3&#39;,                                                      
    loop: true,                                                        
    video: {
        url: &#39;http://qiniu.ursb.me/video/mooc/mooc0106.mp4&#39;, 
        pic: &#39;http://qiniu.ursb.me/image/app%E5%90%8E%E5%8F%B0%E6%9E%81%E9%80%9F%E5%BC%80%E5%8F%91pic6.png&#39;
    },
    danmaku: {  
        id: &#39;2016081106&#39;,
        api: &#39;http://airingursb-dplayer.daoapp.io&#39;,
        token: &#39;tokendemo&#39;,
        maximum: 1000
    }
}

var dp = new DPlayer(option);
dp.init();


&lt;/script&gt;
    
    </summary>
    
      <category term="技术" scheme="http://ursb.me/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="慕课" scheme="http://ursb.me/tags/%E6%85%95%E8%AF%BE/"/>
    
      <category term="后端开发" scheme="http://ursb.me/tags/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>【慕课】App后台极速开发（5）——项目前端</title>
    <link href="http://ursb.me/2016/08/11/%E3%80%90%E6%85%95%E8%AF%BE%E3%80%91App%E5%90%8E%E5%8F%B0%E6%9E%81%E9%80%9F%E5%BC%80%E5%8F%91%EF%BC%885%EF%BC%89%E2%80%94%E2%80%94%E9%A1%B9%E7%9B%AE%E5%89%8D%E7%AB%AF/"/>
    <id>http://ursb.me/2016/08/11/【慕课】App后台极速开发（5）——项目前端/</id>
    <published>2016-08-11T11:47:07.000Z</published>
    <updated>2016-08-11T15:13:59.000Z</updated>
    
    <content type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;div id=&quot;dplayer2016081105&quot; class=&quot;dplayer&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;script&gt;
var option = {
    element: document.getElementById(&#39;dplayer2016081105&#39;),                          
    autoplay: false,                                                      
    theme: &#39;#FADFA3&#39;,                                                      
    loop: true,                                                        
    video: {
        url: &#39;http://qiniu.ursb.me/video/mooc/mooc0105.mp4&#39;, 
        pic: &#39;http://qiniu.ursb.me/image/app%E5%90%8E%E5%8F%B0%E6%9E%81%E9%80%9F%E5%BC%80%E5%8F%91pic5.png&#39;
    },
    danmaku: {  
        id: &#39;2016081105&#39;,
        api: &#39;http://airingursb-dplayer.daoapp.io&#39;,
        token: &#39;tokendemo&#39;,
        maximum: 1000
    }
}

var dp = new DPlayer(option);
dp.init();


&lt;/script&gt;

&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;blockquote&gt;
&lt;p&gt;本视频为 Airing 独立制作，部分为熊猫TV直播时的录屏素材（房间号480538），非授权禁止使用。&lt;br&gt;若有技术交流或关注，欢迎加入Q群：小熊的编程教室（Q群号464785930）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;因为该慕课视频挂在自己的七牛云下，需要支付高额的流量费用，所以希望看官们可以支付宝扫码捐助一下，那就是给我的莫大的支持与鼓励了！！&lt;/strong&gt;&lt;br&gt;一元也可哦~&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://7xkcl8.com1.z0.glb.clouddn.com/ursbzhifubao.png-zfb.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;div id=&quot;dplayer2016081105&quot; class=&quot;dplayer&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;script&gt;
var option = {
    element: document.getElementById(&#39;dplayer2016081105&#39;),                          
    autoplay: false,                                                      
    theme: &#39;#FADFA3&#39;,                                                      
    loop: true,                                                        
    video: {
        url: &#39;http://qiniu.ursb.me/video/mooc/mooc0105.mp4&#39;, 
        pic: &#39;http://qiniu.ursb.me/image/app%E5%90%8E%E5%8F%B0%E6%9E%81%E9%80%9F%E5%BC%80%E5%8F%91pic5.png&#39;
    },
    danmaku: {  
        id: &#39;2016081105&#39;,
        api: &#39;http://airingursb-dplayer.daoapp.io&#39;,
        token: &#39;tokendemo&#39;,
        maximum: 1000
    }
}

var dp = new DPlayer(option);
dp.init();


&lt;/script&gt;
    
    </summary>
    
      <category term="技术" scheme="http://ursb.me/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="慕课" scheme="http://ursb.me/tags/%E6%85%95%E8%AF%BE/"/>
    
      <category term="后端开发" scheme="http://ursb.me/tags/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>【慕课】App后台极速开发（4）——项目文档</title>
    <link href="http://ursb.me/2016/08/11/%E3%80%90%E6%85%95%E8%AF%BE%E3%80%91App%E5%90%8E%E5%8F%B0%E6%9E%81%E9%80%9F%E5%BC%80%E5%8F%91%EF%BC%884%EF%BC%89%E2%80%94%E2%80%94%E9%A1%B9%E7%9B%AE%E6%96%87%E6%A1%A3/"/>
    <id>http://ursb.me/2016/08/11/【慕课】App后台极速开发（4）——项目文档/</id>
    <published>2016-08-11T11:46:56.000Z</published>
    <updated>2016-08-12T11:06:32.000Z</updated>
    
    <content type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;div id=&quot;dplayer2016081104&quot; class=&quot;dplayer&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;


&lt;script&gt;
var option = {
    element: document.getElementById(&#39;dplayer2016081104&#39;),                          
    autoplay: false,                                                      
    theme: &#39;#FADFA3&#39;,                                                      
    loop: true,                                                        
    video: {
        url: &#39;http://qiniu.ursb.me/video/mooc/mooc0104.mp4&#39;, 
        pic: &#39;http://qiniu.ursb.me/image/app%E5%90%8E%E5%8F%B0%E6%9E%81%E9%80%9F%E5%BC%80%E5%8F%91pic4.png&#39;
    },
    danmaku: {  
        id: &#39;2016081104&#39;,
        api: &#39;https://dplayer.daoapp.io/&#39;,
        token: &#39;tokendemo&#39;,
        maximum: 1000
    }
}

var dp = new DPlayer(option);
dp.init();


&lt;/script&gt;

&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;blockquote&gt;
&lt;p&gt;本视频为 Airing 独立制作，部分为熊猫TV直播时的录屏素材（房间号480538），非授权禁止使用。&lt;br&gt;若有技术交流或关注，欢迎加入Q群：小熊的编程教室（Q群号464785930）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;因为该慕课视频挂在自己的七牛云下，需要支付高额的流量费用，所以希望看官们可以支付宝扫码捐助一下，那就是给我的莫大的支持与鼓励了！！&lt;/strong&gt;&lt;br&gt;一元也可哦~&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://7xkcl8.com1.z0.glb.clouddn.com/ursbzhifubao.png-zfb.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;div id=&quot;dplayer2016081104&quot; class=&quot;dplayer&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;


&lt;script&gt;
var option = {
    element: document.getElementById(&#39;dplayer2016081104&#39;),                          
    autoplay: false,                                                      
    theme: &#39;#FADFA3&#39;,                                                      
    loop: true,                                                        
    video: {
        url: &#39;http://qiniu.ursb.me/video/mooc/mooc0104.mp4&#39;, 
        pic: &#39;http://qiniu.ursb.me/image/app%E5%90%8E%E5%8F%B0%E6%9E%81%E9%80%9F%E5%BC%80%E5%8F%91pic4.png&#39;
    },
    danmaku: {  
        id: &#39;2016081104&#39;,
        api: &#39;https://dplayer.daoapp.io/&#39;,
        token: &#39;tokendemo&#39;,
        maximum: 1000
    }
}

var dp = new DPlayer(option);
dp.init();


&lt;/script&gt;
    
    </summary>
    
      <category term="技术" scheme="http://ursb.me/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="后端开发" scheme="http://ursb.me/tags/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
      <category term="慕课https://dplayer.daoapp.io/" scheme="http://ursb.me/tags/%E6%85%95%E8%AF%BEhttps-dplayer-daoapp-io/"/>
    
  </entry>
  
  <entry>
    <title>【慕课】App后台极速开发（3）——工具介绍</title>
    <link href="http://ursb.me/2016/08/11/%E3%80%90%E6%85%95%E8%AF%BE%E3%80%91App%E5%90%8E%E5%8F%B0%E6%9E%81%E9%80%9F%E5%BC%80%E5%8F%91%EF%BC%883%EF%BC%89%E2%80%94%E2%80%94%E5%B7%A5%E5%85%B7%E4%BB%8B%E7%BB%8D/"/>
    <id>http://ursb.me/2016/08/11/【慕课】App后台极速开发（3）——工具介绍/</id>
    <published>2016-08-11T11:46:45.000Z</published>
    <updated>2016-08-11T15:14:04.000Z</updated>
    
    <content type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;div id=&quot;dplayer2016081103&quot; class=&quot;dplayer&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;script&gt;
var option = {
    element: document.getElementById(&#39;dplayer2016081103&#39;),                          
    autoplay: false,                                                      
    theme: &#39;#FADFA3&#39;,                                                      
    loop: true,                                                        
    video: {
        url: &#39;http://qiniu.ursb.me/video/mooc/mooc0103.mp4&#39;, 
        pic: &#39;http://qiniu.ursb.me/image/app%E5%90%8E%E5%8F%B0%E6%9E%81%E9%80%9F%E5%BC%80%E5%8F%91pic3.png&#39;
    },
    danmaku: {  
        id: &#39;2016081103&#39;,
        api: &#39;http://airingursb-dplayer.daoapp.io&#39;,
        token: &#39;tokendemo&#39;,
        maximum: 1000
    }
}

var dp = new DPlayer(option);
dp.init();

&lt;/script&gt;

&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;blockquote&gt;
&lt;p&gt;本视频为 Airing 独立制作，部分为熊猫TV直播时的录屏素材（房间号480538），非授权禁止使用。&lt;br&gt;若有技术交流或关注，欢迎加入Q群：小熊的编程教室（Q群号464785930）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;因为该慕课视频挂在自己的七牛云下，需要支付高额的流量费用，所以希望看官们可以支付宝扫码捐助一下，那就是给我的莫大的支持与鼓励了！！&lt;/strong&gt;&lt;br&gt;一元也可哦~&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://7xkcl8.com1.z0.glb.clouddn.com/ursbzhifubao.png-zfb.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;div id=&quot;dplayer2016081103&quot; class=&quot;dplayer&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;script&gt;
var option = {
    element: document.getElementById(&#39;dplayer2016081103&#39;),                          
    autoplay: false,                                                      
    theme: &#39;#FADFA3&#39;,                                                      
    loop: true,                                                        
    video: {
        url: &#39;http://qiniu.ursb.me/video/mooc/mooc0103.mp4&#39;, 
        pic: &#39;http://qiniu.ursb.me/image/app%E5%90%8E%E5%8F%B0%E6%9E%81%E9%80%9F%E5%BC%80%E5%8F%91pic3.png&#39;
    },
    danmaku: {  
        id: &#39;2016081103&#39;,
        api: &#39;http://airingursb-dplayer.daoapp.io&#39;,
        token: &#39;tokendemo&#39;,
        maximum: 1000
    }
}

var dp = new DPlayer(option);
dp.init();

&lt;/script&gt;
    
    </summary>
    
      <category term="技术" scheme="http://ursb.me/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="慕课" scheme="http://ursb.me/tags/%E6%85%95%E8%AF%BE/"/>
    
      <category term="后端开发" scheme="http://ursb.me/tags/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>【慕课】App后台极速开发（2）——技术介绍</title>
    <link href="http://ursb.me/2016/08/11/%E3%80%90%E6%85%95%E8%AF%BE%E3%80%91App%E5%90%8E%E5%8F%B0%E6%9E%81%E9%80%9F%E5%BC%80%E5%8F%91%EF%BC%882%EF%BC%89%E2%80%94%E2%80%94%E6%8A%80%E6%9C%AF%E4%BB%8B%E7%BB%8D/"/>
    <id>http://ursb.me/2016/08/11/【慕课】App后台极速开发（2）——技术介绍/</id>
    <published>2016-08-11T11:46:35.000Z</published>
    <updated>2016-08-12T11:04:37.000Z</updated>
    
    <content type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;div id=&quot;dplayer2016081102&quot; class=&quot;dplayer&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;script&gt;
var option = {
    element: document.getElementById(&#39;dplayer2016081102&#39;),                          
    autoplay: false,                                                      
    theme: &#39;#FADFA3&#39;,                                                      
    loop: true,                                                        
    video: {
        url: &#39;http://qiniu.ursb.me/video/mooc/mooc0102.mp4&#39;, 
        pic: &#39;http://qiniu.ursb.me/image/app%E5%90%8E%E5%8F%B0%E6%9E%81%E9%80%9F%E5%BC%80%E5%8F%91pic2.png&#39;
    },
    danmaku: {  
        id: &#39;2016081102&#39;,
        api: &#39;https://dplayer.daoapp.io/

&#39;,
        token: &#39;tokendemo&#39;,
        maximum: 1000
    }
}

var dp = new DPlayer(option);
dp.init();


&lt;/script&gt;

&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;blockquote&gt;
&lt;p&gt;本视频为 Airing 独立制作，部分为熊猫TV直播时的录屏素材（房间号480538），非授权禁止使用。&lt;br&gt;若有技术交流或关注，欢迎加入Q群：小熊的编程教室（Q群号464785930）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;因为该慕课视频挂在自己的七牛云下，需要支付高额的流量费用，所以希望看官们可以支付宝扫码捐助一下，那就是给我的莫大的支持与鼓励了！！&lt;/strong&gt;&lt;br&gt;一元也可哦~&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://7xkcl8.com1.z0.glb.clouddn.com/ursbzhifubao.png-zfb.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;div id=&quot;dplayer2016081102&quot; class=&quot;dplayer&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;script&gt;
var option = {
    element: document.getElementById(&#39;dplayer2016081102&#39;),                          
    autoplay: false,                                                      
    theme: &#39;#FADFA3&#39;,                                                      
    loop: true,                                                        
    video: {
        url: &#39;http://qiniu.ursb.me/video/mooc/mooc0102.mp4&#39;, 
        pic: &#39;http://qiniu.ursb.me/image/app%E5%90%8E%E5%8F%B0%E6%9E%81%E9%80%9F%E5%BC%80%E5%8F%91pic2.png&#39;
    },
    danmaku: {  
        id: &#39;2016081102&#39;,
        api: &#39;https://dplayer.daoapp.io/

&#39;,
        token: &#39;tokendemo&#39;,
        maximum: 1000
    }
}

var dp = new DPlayer(option);
dp.init();


&lt;/script&gt;
    
    </summary>
    
      <category term="技术" scheme="http://ursb.me/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="后端开发" scheme="http://ursb.me/tags/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
      <category term="慕课https://dplayer.daoapp.io/" scheme="http://ursb.me/tags/%E6%85%95%E8%AF%BEhttps-dplayer-daoapp-io/"/>
    
  </entry>
  
  <entry>
    <title>【慕课】App后台极速开发（1）——基础知识</title>
    <link href="http://ursb.me/2016/08/11/%E3%80%90%E6%85%95%E8%AF%BE%E3%80%91App%E5%90%8E%E5%8F%B0%E6%9E%81%E9%80%9F%E5%BC%80%E5%8F%91%EF%BC%881%EF%BC%89%E2%80%94%E2%80%94%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    <id>http://ursb.me/2016/08/11/【慕课】App后台极速开发（1）——基础知识/</id>
    <published>2016-08-11T11:46:20.000Z</published>
    <updated>2016-08-12T11:06:49.000Z</updated>
    
    <content type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;div id=&quot;dplayer2016081101&quot; class=&quot;dplayer&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;script&gt;
var option = {
    element: document.getElementById(&#39;dplayer2016081101&#39;),                          
    autoplay: false,                                                      
    theme: &#39;#FADFA3&#39;,                                                      
    loop: true,                                                        
    video: {
        url: &#39;http://qiniu.ursb.me/video/mooc/mooc0101.mp4&#39;, 
        pic: &#39;http://qiniu.ursb.me/image/app%E5%90%8E%E5%8F%B0%E6%9E%81%E9%80%9F%E5%BC%80%E5%8F%91pic1.png&#39;
    },
    danmaku: {  
        id: &#39;2016081101&#39;,
        api: &#39;https://dplayer.daoapp.io/&#39;,
        token: &#39;tokendemo&#39;,
        maximum: 1000
    }
}

var dp = new DPlayer(option);
dp.init();


&lt;/script&gt;

&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;blockquote&gt;
&lt;p&gt;本视频为 Airing 独立制作，部分为熊猫TV直播时的录屏素材（房间号480538），非授权禁止使用。&lt;br&gt;若有技术交流或关注，欢迎加入Q群：小熊的编程教室（Q群号464785930）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;因为该慕课视频挂在自己的七牛云下，需要支付高额的流量费用，所以希望看官们可以支付宝扫码捐助一下，那就是给我的莫大的支持与鼓励了！！&lt;/strong&gt;&lt;br&gt;一元也可哦~&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://7xkcl8.com1.z0.glb.clouddn.com/ursbzhifubao.png-zfb.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;div id=&quot;dplayer2016081101&quot; class=&quot;dplayer&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;script&gt;
var option = {
    element: document.getElementById(&#39;dplayer2016081101&#39;),                          
    autoplay: false,                                                      
    theme: &#39;#FADFA3&#39;,                                                      
    loop: true,                                                        
    video: {
        url: &#39;http://qiniu.ursb.me/video/mooc/mooc0101.mp4&#39;, 
        pic: &#39;http://qiniu.ursb.me/image/app%E5%90%8E%E5%8F%B0%E6%9E%81%E9%80%9F%E5%BC%80%E5%8F%91pic1.png&#39;
    },
    danmaku: {  
        id: &#39;2016081101&#39;,
        api: &#39;https://dplayer.daoapp.io/&#39;,
        token: &#39;tokendemo&#39;,
        maximum: 1000
    }
}

var dp = new DPlayer(option);
dp.init();


&lt;/script&gt;
    
    </summary>
    
      <category term="技术" scheme="http://ursb.me/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="https://dplayer.daoapp.io/

- 慕课 - 后端开发" scheme="http://ursb.me/tags/https-dplayer-daoapp-io-%E6%85%95%E8%AF%BE-%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>【慕课】App后台极速开发 课件</title>
    <link href="http://ursb.me/2016/08/08/App%E5%90%8E%E5%8F%B0%E6%9E%81%E9%80%9F%E5%BC%80%E5%8F%91-%E8%AF%BE%E4%BB%B6/"/>
    <id>http://ursb.me/2016/08/08/App后台极速开发-课件/</id>
    <published>2016-08-08T12:21:13.000Z</published>
    <updated>2016-08-12T06:57:49.000Z</updated>
    
    <content type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;iframe src=&quot;https://docs.google.com/presentation/d/1YKmHdLnuBXspP90wmtJ6LIimhpkDojLUf-JNnqzKyZA/embed?start=false&amp;loop=false&amp;delayms=3000&quot; frameborder=&quot;0&quot; width=&quot;960&quot; height=&quot;569&quot; allowfullscreen=&quot;true&quot; mozallowfullscreen=&quot;true&quot; webkitallowfullscreen=&quot;true&quot;&gt;&lt;/iframe&gt;</content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;iframe src=&quot;https://docs.goog
    
    </summary>
    
      <category term="技术" scheme="http://ursb.me/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="慕课" scheme="http://ursb.me/tags/%E6%85%95%E8%AF%BE/"/>
    
      <category term="后端开发" scheme="http://ursb.me/tags/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>再见了，我最爱的你</title>
    <link href="http://ursb.me/2016/08/05/%E5%86%8D%E8%A7%81%E4%BA%86%EF%BC%8C%E6%88%91%E6%9C%80%E7%88%B1%E7%9A%84%E4%BD%A0/"/>
    <id>http://ursb.me/2016/08/05/再见了，我最爱的你/</id>
    <published>2016-08-05T15:38:36.000Z</published>
    <updated>2016-08-12T11:06:10.000Z</updated>
    
    <content type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;div id=&quot;dplayer2016080501&quot; class=&quot;dplayer&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;script&gt;
var option = {
    element: document.getElementById(&#39;dplayer2016080501&#39;),                          
    autoplay: false,                                                      
    theme: &#39;#FADFA3&#39;,                                                      
    loop: true,                                                        
    video: {
        url: &#39;http://qiniu.ursb.me/video/sunshine.mp4&#39;, 
        pic: &#39;http://qiniu.ursb.me/image/%E5%96%9C%E6%AC%A2.png&#39;
    },
    danmaku: {  
        id: &#39;2016080501&#39;,
        api: &#39;https://dplayer.daoapp.io/&#39;,
        token: &#39;tokendemo&#39;,
        maximum: 1000
    }
}

var dp = new DPlayer(option);
dp.init();


&lt;/script&gt;
</content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;div id=&quot;dplayer2016080501&quot; cl
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Before Coding [15] - JavaScript - 条件判断语句</title>
    <link href="http://ursb.me/2016/07/17/Before-Coding-15-JavaScript-%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD%E8%AF%AD%E5%8F%A5/"/>
    <id>http://ursb.me/2016/07/17/Before-Coding-15-JavaScript-条件判断语句/</id>
    <published>2016-07-17T02:04:03.000Z</published>
    <updated>2016-07-21T11:56:08.000Z</updated>
    
    <content type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;blockquote&gt;
&lt;p&gt;必备知识：前面课程的学习&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;u6D41_u7A0B_u63A7_u5236_u8BED_u53E5&quot;&gt;&lt;a href=&quot;#u6D41_u7A0B_u63A7_u5236_u8BED_u53E5&quot; class=&quot;headerlink&quot; title=&quot;流程控制语句&quot;&gt;&lt;/a&gt;流程控制语句&lt;/h2&gt;&lt;p&gt;在大多数编程语言中，主要存在着三种流程控制语句：&lt;strong&gt;顺序语句、条件语句、循环语句&lt;/strong&gt;。我们之前课程中接触到的语句都是顺序语句，接下来两节，将会讲解条件判断语句、循环语句。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;u8BED_u53E5_u5757&quot;&gt;&lt;a href=&quot;#u8BED_u53E5_u5757&quot; class=&quot;headerlink&quot; title=&quot;语句块&quot;&gt;&lt;/a&gt;语句块&lt;/h3&gt;&lt;p&gt;大多数程序都使用语句块来给语句分组，这样可以使语句的结构清晰明了。我们使用一对花括号（ {} ）来分组语句块，如下所示：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   statement_1;   statement_2;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   statement_3;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   ...&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   statement_n;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;涉及到语句块，就存在着&lt;strong&gt;块作用域&lt;/strong&gt;的问题。例如下面的代码：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; x = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; x = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;alert(x); &lt;span class=&quot;comment&quot;&gt;// 输出的结果为 2&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这段代码的输出是２，这是因为 &lt;strong&gt;var x = 2&lt;/strong&gt; 的作用范围与 &lt;strong&gt;var x = 1&lt;/strong&gt; 的作用范围相同，在 C 语言或是 Java 语言中，同样的代码输出的结果是１。&lt;/p&gt;
&lt;p&gt;从 ECMAScript 6 开始，使用 let 定义的变量是块作用域的。&lt;/p&gt;
&lt;h2 id=&quot;u6761_u4EF6_u5224_u65AD_u8BED_u53E5&quot;&gt;&lt;a href=&quot;#u6761_u4EF6_u5224_u65AD_u8BED_u53E5&quot; class=&quot;headerlink&quot; title=&quot;条件判断语句&quot;&gt;&lt;/a&gt;条件判断语句&lt;/h2&gt;&lt;p&gt;条件判断语句指的是根据指定的条件所返回的结果（真或假），来执行特定的语句。JavaScript 提供了两种条件判断语句：&lt;strong&gt;if…else&lt;/strong&gt; 和 &lt;strong&gt;switch&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&quot;if__u8BED_u53E5&quot;&gt;&lt;a href=&quot;#if__u8BED_u53E5&quot; class=&quot;headerlink&quot; title=&quot;if 语句&quot;&gt;&lt;/a&gt;if 语句&lt;/h3&gt;&lt;p&gt;当一个逻辑条件为真，用 if 语句执行一个语句。当这个条件为假，使用可选择的else 从句来执行这个语句。if 语句如下所示：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (condition) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  statement_1;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  statement_2;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125; 	&lt;span class=&quot;comment&quot;&gt;//语句else可选&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;条件可以是任何返回结果是 true 或 false 的表达式。如果条件表达式返回的是 true，statement_1 会被执行；否则，statement_2 被执行。statement_1 和 statement_2 可以是任何语句，甚至你可以将另一个 if 语句嵌套其中。 &lt;/p&gt;
&lt;p&gt;你也可以组合语句通过使用 &lt;strong&gt;else if&lt;/strong&gt; 来测试连续的多种条件判断，就像下面这样：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (condition_1) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  statement_1;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (condition_2) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  statement_2;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ... 可以有任意个 else if&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (condition_n_1) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  statement_n_1;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  statement_n;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：&lt;br&gt;下面这些值将被计算出 &lt;strong&gt;false&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;false&lt;/li&gt;
&lt;li&gt;undefined&lt;/li&gt;
&lt;li&gt;null&lt;/li&gt;
&lt;li&gt;0 &lt;/li&gt;
&lt;li&gt;NaN&lt;/li&gt;
&lt;li&gt;空字符串 (“”)&lt;br&gt;当传递给条件语句时，所有其他值，包括所有对象会被计算为 true 。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;switch__u8BED_u53E5&quot;&gt;&lt;a href=&quot;#switch__u8BED_u53E5&quot; class=&quot;headerlink&quot; title=&quot;switch 语句&quot;&gt;&lt;/a&gt;switch 语句&lt;/h3&gt;&lt;p&gt;switch 语句允许一个程序求一个表达式的值并且尝试去匹配表达式的值到一个 case label。如果匹配成功，这个程序执行相关的语句。switch 语句如下所示：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt; (expression) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; label_1:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      statements_1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; label_2:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      statements_2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   ...&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   default:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      statements_def&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;程序首先查找一个与 expression 匹配的 case 语句，然后将控制权转移到该子句，执行相关的语句。如果没有匹配值， 程序会去找 default 语句，如果找到了，控制权转移到该子句，执行相关的语句。如果没有找到 default，程序会继续执行 switch 语句后面的语句。default 语句通常出现在 switch 语句里的最后面，当然这不是必须的。&lt;/p&gt;
&lt;p&gt;可选的 break 语句与每个 case 语句相关联， 保证在匹配匹配的语句被执行后程序可以跳出 switch 并且继续执行 switch 后面的语句。&lt;strong&gt;如果不写 break , 程序将继续执行 switch 中的语句。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在如下示例中, 如果 fruittype 等于 “Bananas”, 程序匹配到对应 “Bananas” 的 case 语句，并执行相关语句。 当执行到 break 时，程序结束了 switch 并执行 switch 后面的语句。 如果不写 break ，那么程序将会执行 case “Cherries” 下的语句。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt; (fruittype) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;Oranges&quot;&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.write(&lt;span class=&quot;string&quot;&gt;&quot;Oranges are $0.59 a pound.&amp;lt;br&amp;gt;&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;Apples&quot;&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.write(&lt;span class=&quot;string&quot;&gt;&quot;Apples are $0.32 a pound.&amp;lt;br&amp;gt;&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;Bananas&quot;&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.write(&lt;span class=&quot;string&quot;&gt;&quot;Bananas are $0.48 a pound.&amp;lt;br&amp;gt;&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;Cherries&quot;&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.write(&lt;span class=&quot;string&quot;&gt;&quot;Cherries are $3.00 a pound.&amp;lt;br&amp;gt;&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;Mangoes&quot;&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;Papayas&quot;&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.write(&lt;span class=&quot;string&quot;&gt;&quot;Mangoes and papayas are $2.79 a pound.&amp;lt;br&amp;gt;&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.write(&lt;span class=&quot;string&quot;&gt;&quot;Sorry, we are out of &quot;&lt;/span&gt; + fruittype + &lt;span class=&quot;string&quot;&gt;&quot;.&amp;lt;br&amp;gt;&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.write(&lt;span class=&quot;string&quot;&gt;&quot;Is there anything else you&#39;d like?&amp;lt;br&amp;gt;&quot;&lt;/span&gt;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;u672C_u8282_u4EFB_u52A1&quot;&gt;&lt;a href=&quot;#u672C_u8282_u4EFB_u52A1&quot; class=&quot;headerlink&quot; title=&quot;本节任务&quot;&gt;&lt;/a&gt;本节任务&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;学习慕课网提供的&lt;a href=&quot;http://www.imooc.com/learn/10&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;br&gt;《JavaScript进阶篇》&lt;/a&gt;中 4-1 至 4-4 的内容，并完成练习。&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;必备知识：前面课程的学习&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;u6D41_u7A0B_u63A7_u5236_u8BED_u53E5&quot;&gt;&lt;a href=&quot;#u6D41_u7A0B_u63A7_u5236_u8BED_u53E5&quot; class=&quot;headerlink&quot; title=&quot;流程控制语句&quot;&gt;&lt;/a&gt;流程控制语句&lt;/h2&gt;&lt;p&gt;在大多数编程语言中，主要存在着三种流程控制语句：&lt;strong&gt;顺序语句、条件语句、循环语句&lt;/strong&gt;。我们之前课程中接触到的语句都是顺序语句，接下来两节，将会讲解条件判断语句、循环语句。&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="http://ursb.me/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Before Coding" scheme="http://ursb.me/tags/Before-Coding/"/>
    
  </entry>
  
  <entry>
    <title>Before Coding [14] - JavaScript - 数组</title>
    <link href="http://ursb.me/2016/07/17/Before-Coding-14-JavaScript-%E6%95%B0%E7%BB%84/"/>
    <id>http://ursb.me/2016/07/17/Before-Coding-14-JavaScript-数组/</id>
    <published>2016-07-17T02:04:03.000Z</published>
    <updated>2016-07-21T10:44:57.000Z</updated>
    
    <content type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;blockquote&gt;
&lt;p&gt;必备知识：前面课程的学习&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;u6982_u8FF0&quot;&gt;&lt;a href=&quot;#u6982_u8FF0&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;数组是类似列表的对象，在原型中提供了遍历以及改变其中元素的很多方法。 数组的长度及其中元素的类型都是不固定的。因为数组的长度可读可写，有时数组中的元素也不是在连续的位置，所以 JavaScript 数组不一定是密集的。&lt;/p&gt;
&lt;h2 id=&quot;u521B_u5EFA_u6570_u7EC4&quot;&gt;&lt;a href=&quot;#u521B_u5EFA_u6570_u7EC4&quot; class=&quot;headerlink&quot; title=&quot;创建数组&quot;&gt;&lt;/a&gt;创建数组&lt;/h2&gt;&lt;p&gt;创建数组有三种方式，语法如下：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;[element0, element1, ..., elementN]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Array&lt;/span&gt;(element0, element1[, ...[, elementN]])&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Array&lt;/span&gt;(arrayLength)	&lt;span class=&quot;comment&quot;&gt;//arrayLength 为数组长度&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;u8BBF_u95EE_u6570_u7EC4&quot;&gt;&lt;a href=&quot;#u8BBF_u95EE_u6570_u7EC4&quot; class=&quot;headerlink&quot; title=&quot;访问数组&quot;&gt;&lt;/a&gt;访问数组&lt;/h2&gt;&lt;p&gt;JavaScript 数组的索引值（index）从0开始，即数组第一个元素的索引值为0。最后一个元素的索引值等于该数组的长度减1（Array.length -1）。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; arr = [&lt;span class=&quot;string&quot;&gt;&#39;this is the first element&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;this is the second element&#39;&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(arr[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]);              &lt;span class=&quot;comment&quot;&gt;// logs &#39;this is the first element&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(arr[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]);              &lt;span class=&quot;comment&quot;&gt;// logs &#39;this is the second element&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(arr[arr.length - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]); &lt;span class=&quot;comment&quot;&gt;// logs &#39;this is the second element&#39;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;数组中的元素像一个对象以索引为属性名，元素为属性值，或者&lt;strong&gt;arr=[‘a’,’b’]&lt;/strong&gt; 有点像 &lt;strong&gt;arrObj={0:’a’,1:’b’} &lt;/strong&gt;，一个对象的属性是可以通过”&lt;code&gt;.&lt;/code&gt;“来访问，但是使用下面这样使用会抛出语法错误，因为属性名称是非法的：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; years = [&lt;span class=&quot;number&quot;&gt;1950&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1960&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1970&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1980&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1990&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2000&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2010&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(years&lt;span class=&quot;number&quot;&gt;.0&lt;/span&gt;);   &lt;span class=&quot;comment&quot;&gt;// a syntax error&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(years[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]);  &lt;span class=&quot;comment&quot;&gt;// works properly&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;u83B7_u53D6_u6570_u7EC4_u957F_u5EA6&quot;&gt;&lt;a href=&quot;#u83B7_u53D6_u6570_u7EC4_u957F_u5EA6&quot; class=&quot;headerlink&quot; title=&quot;获取数组长度&quot;&gt;&lt;/a&gt;获取数组长度&lt;/h2&gt;&lt;p&gt;JavaScript array 的 &lt;strong&gt;length&lt;/strong&gt; 属性和其数字下标是有关系的。几个内置数组的方法 (例如, &lt;strong&gt;join&lt;/strong&gt;，&lt;strong&gt;slice&lt;/strong&gt;，&lt;strong&gt;indexOf&lt;/strong&gt;等) 被调用的时候会使用到 length 属性。 有些别的方法 (例如，&lt;strong&gt;push&lt;/strong&gt;，&lt;strong&gt;splice&lt;/strong&gt; 等) 会改变 array 的 length 属性。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; fruits = [];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fruits.push(&lt;span class=&quot;string&quot;&gt;&#39;banana&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;apple&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;peach&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(fruits.length); &lt;span class=&quot;comment&quot;&gt;// 3&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当你在 array 上使用一个合法的数组下标，而且该下标超出了当前数组的大小的时候，引擎会根据其值自动更新 array 的 length 属性：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;fruits[&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;] = &lt;span class=&quot;string&quot;&gt;&#39;mango&#39;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(fruits[&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;]); &lt;span class=&quot;comment&quot;&gt;// &#39;mango&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(fruits.length); &lt;span class=&quot;comment&quot;&gt;// 6&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;同样的，减小 array 的 length 属性会删掉超出的元素：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;fruits.length = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(fruits.length); &lt;span class=&quot;comment&quot;&gt;// 2&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;u6570_u7EC4_u4F7F_u7528_u7684_u5B8C_u6574_u5B9E_u4F8B&quot;&gt;&lt;a href=&quot;#u6570_u7EC4_u4F7F_u7528_u7684_u5B8C_u6574_u5B9E_u4F8B&quot; class=&quot;headerlink&quot; title=&quot;数组使用的完整实例&quot;&gt;&lt;/a&gt;数组使用的完整实例&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;创建数组&lt;/p&gt;
 &lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; fruits = [&lt;span class=&quot;string&quot;&gt;&quot;Apple&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Banana&quot;&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(fruits.length);	&lt;span class=&quot;comment&quot;&gt;// 2&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;通过索引访问数组&lt;/p&gt;
 &lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; first = fruits[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Apple&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; last = fruits[fruits.length - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Banana&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;循环遍历一个数组&lt;code&gt;forEach&lt;/code&gt;&lt;/p&gt;
 &lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;fruits.forEach(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;item, index, array&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	 	&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(item, index);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Apple 0&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Banana 1&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;添加一个元素到数组的末尾&lt;code&gt;push&lt;/code&gt;&lt;/p&gt;
 &lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; newLength = fruits.push(&lt;span class=&quot;string&quot;&gt;&quot;Orange&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// [&quot;Apple&quot;, &quot;Banana&quot;, &quot;Orange&quot;]&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;删除数组末尾的元素&lt;code&gt;pop&lt;/code&gt;&lt;/p&gt;
 &lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; last = fruits.pop(); &lt;span class=&quot;comment&quot;&gt;// remove Orange (from the end)&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// [&quot;Apple&quot;, &quot;Banana&quot;];&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;删除数组前面的元素&lt;code&gt;shift&lt;/code&gt;&lt;/p&gt;
 &lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; first = fruits.shift(); &lt;span class=&quot;comment&quot;&gt;// remove Apple from the front&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// [&quot;Banana&quot;];&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;添加到数组的前面&lt;code&gt;unshift&lt;/code&gt;&lt;/p&gt;
 &lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; newLength = fruits.unshift(&lt;span class=&quot;string&quot;&gt;&quot;Strawberry&quot;&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;// add to the front&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// [&quot;Strawberry&quot;, &quot;Banana&quot;];&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;找到某个元素在数组中的索引&lt;code&gt;push&lt;/code&gt;&lt;/p&gt;
 &lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;fruits.push(&lt;span class=&quot;string&quot;&gt;&quot;Mango&quot;&lt;/span&gt;); 	&lt;span class=&quot;comment&quot;&gt;// [&quot;Strawberry&quot;, &quot;Banana&quot;, &quot;Mango&quot;]&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; pos = fruits.indexOf(&lt;span class=&quot;string&quot;&gt;&quot;Banana&quot;&lt;/span&gt;);	&lt;span class=&quot;comment&quot;&gt;// 1&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;通过索引删除某个元素&lt;code&gt;splice&lt;/code&gt;&lt;/p&gt;
 &lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; removedItem = fruits.splice(pos, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// this is how to remove an item&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// [&quot;Strawberry&quot;, &quot;Mango&quot;]&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;复制一个数组&lt;code&gt;slice&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; shallowCopy = fruits.slice(); &lt;span class=&quot;comment&quot;&gt;// this is how to make a copy&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// [&quot;Strawberry&quot;, &quot;Mango&quot;]&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;u672C_u8282_u4EFB_u52A1&quot;&gt;&lt;a href=&quot;#u672C_u8282_u4EFB_u52A1&quot; class=&quot;headerlink&quot; title=&quot;本节任务&quot;&gt;&lt;/a&gt;本节任务&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;学习慕课网提供的&lt;a href=&quot;http://www.imooc.com/learn/10&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;br&gt;《JavaScript进阶篇》&lt;/a&gt;中 第3章 的内容，并完成练习。&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;必备知识：前面课程的学习&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;u6982_u8FF0&quot;&gt;&lt;a href=&quot;#u6982_u8FF0&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;数组是类似列表的对象，在原型中提供了遍历以及改变其中元素的很多方法。 数组的长度及其中元素的类型都是不固定的。因为数组的长度可读可写，有时数组中的元素也不是在连续的位置，所以 JavaScript 数组不一定是密集的。&lt;/p&gt;
&lt;h2 id=&quot;u521B_u5EFA_u6570_u7EC4&quot;&gt;&lt;a href=&quot;#u521B_u5EFA_u6570_u7EC4&quot; class=&quot;headerlink&quot; title=&quot;创建数组&quot;&gt;&lt;/a&gt;创建数组&lt;/h2&gt;&lt;p&gt;创建数组有三种方式，语法如下：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;[element0, element1, ..., elementN]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Array&lt;/span&gt;(element0, element1[, ...[, elementN]])&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Array&lt;/span&gt;(arrayLength)	&lt;span class=&quot;comment&quot;&gt;//arrayLength 为数组长度&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="技术" scheme="http://ursb.me/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Before Coding" scheme="http://ursb.me/tags/Before-Coding/"/>
    
  </entry>
  
  <entry>
    <title>Before Coding [13] - JavaScript - 表达式和运算符</title>
    <link href="http://ursb.me/2016/07/14/Before-Coding-13-JavaScript-%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%92%8C%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
    <id>http://ursb.me/2016/07/14/Before-Coding-13-JavaScript-表达式和运算符/</id>
    <published>2016-07-14T02:55:44.000Z</published>
    <updated>2016-07-14T05:36:09.000Z</updated>
    
    <content type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;blockquote&gt;
&lt;p&gt;必备知识：前面课程的学习&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;u6982_u8FF0&quot;&gt;&lt;a href=&quot;#u6982_u8FF0&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;本章主要介绍 JavaScript 的表达式和运算符，包括了赋值，比较，算数，按位，逻辑，字符串，三元等等。列举所有的运算符，但是不会全部讲解，只讲解实际编程中会用到的几种。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;u8FD0_u7B97_u7B26_uFF08Operators_uFF09&quot;&gt;&lt;a href=&quot;#u8FD0_u7B97_u7B26_uFF08Operators_uFF09&quot; class=&quot;headerlink&quot; title=&quot;运算符（Operators）&quot;&gt;&lt;/a&gt;运算符（Operators）&lt;/h2&gt;&lt;p&gt;JavaScript 拥有如下类型的运算符：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;赋值运算符&lt;/li&gt;
&lt;li&gt;比较运算符&lt;/li&gt;
&lt;li&gt;算数运算符&lt;/li&gt;
&lt;li&gt;按位运算符&lt;/li&gt;
&lt;li&gt;逻辑运算符&lt;/li&gt;
&lt;li&gt;字符串运算符&lt;/li&gt;
&lt;li&gt;条件 (三元) 运算符&lt;/li&gt;
&lt;li&gt;逗号运算符&lt;/li&gt;
&lt;li&gt;一元运算符&lt;/li&gt;
&lt;li&gt;关系运算符&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;JavaScript 拥有二元和一元运算符， 和一个特殊的三元运算符（条件运算符）。&lt;/p&gt;
&lt;p&gt;一个二元运算符需要两个操作数，分别在运算符的前面和后面：&lt;/p&gt;
&lt;figure class=&quot;highlight gcode&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;操作数&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;   运算符   操作数&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;opera&lt;span class=&quot;symbol&quot;&gt;nd1&lt;/span&gt; operator opera&lt;span class=&quot;symbol&quot;&gt;nd2&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;例如, &lt;strong&gt;3+4&lt;/strong&gt; 或 &lt;strong&gt;x*y&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;一个一元运算符需要一个在运算符前面或后面的操作数：&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;运算符    操作数&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;operator&lt;/span&gt; operand&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;或&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;操作数   运算符&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;operand &lt;span class=&quot;keyword&quot;&gt;operator&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;例如, &lt;strong&gt;x++&lt;/strong&gt; 或 &lt;strong&gt;++x&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&quot;u8D4B_u503C_u8FD0_u7B97_u7B26&quot;&gt;&lt;a href=&quot;#u8D4B_u503C_u8FD0_u7B97_u7B26&quot; class=&quot;headerlink&quot; title=&quot;赋值运算符&quot;&gt;&lt;/a&gt;赋值运算符&lt;/h3&gt;&lt;p&gt;一个赋值运算符赋一个基于它右边操作数值的值给它左边的操作数。最简单的赋值运算符是等于（&lt;code&gt;=&lt;/code&gt;），将右边的操作数值赋给左边的操作数。那么 &lt;strong&gt;x = y&lt;/strong&gt; 就是将 &lt;strong&gt;y&lt;/strong&gt; 的值赋给 &lt;strong&gt;x&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;在下面的表格中列出了有一些为速记操作的复合赋值运算符：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;名字&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;速记操作&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;等同于&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;赋值&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;x = y&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;x = y&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;加法赋值&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;x += y&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;x = x + y&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;减法赋值&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;x -= y&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;x = x - y&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;乘法赋值&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;x *= y&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;x = x * y&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;除法赋值&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;x /= y&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;x = x / y&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;求余赋值&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;x %= y&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;x = x % y&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;求幂赋值&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;x **= y&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;x = x ** y&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;左移位赋值&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;x &amp;lt;&amp;lt;= y&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;x = x &amp;lt;&amp;lt; y&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;右移位赋值&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;x &amp;gt;&amp;gt;= y&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;x = x &amp;gt;&amp;gt; y&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;无符号右移位赋值&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;x &amp;gt;&amp;gt;&amp;gt;= y&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;x = x &amp;gt;&amp;gt;&amp;gt; y&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;按位与赋值&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;x &amp;amp;= y&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;x = x &amp;amp; y&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;按位异或赋值&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;x ^= y&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;x = x ^ y&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;按位或赋值&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;`x&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;= y`&lt;/td&gt;
&lt;td&gt;`x = x&lt;/td&gt;
&lt;td&gt;y`&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&quot;u6BD4_u8F83_u8FD0_u7B97_u7B26&quot;&gt;&lt;a href=&quot;#u6BD4_u8F83_u8FD0_u7B97_u7B26&quot; class=&quot;headerlink&quot; title=&quot;比较运算符&quot;&gt;&lt;/a&gt;比较运算符&lt;/h3&gt;&lt;p&gt;一个比较运算符比较它的操作数并返回一个机遇表达式是否为真的逻辑值。操作数可以是数字，字符串，逻辑，对象值。字符串比较是基于标准的字典顺序，使用 Unicode 值。在多数情况下，如果两个操作数不是相同的类型， JavaScript 会尝试转换它们为恰当的类型来比较。这种行为通常发生在数字作为操作数的比较。类型转换的例外是使用 &lt;code&gt;===&lt;/code&gt; 和 &lt;code&gt;!==&lt;/code&gt; 操作符，它们会执行严格的平等和非平等比较。这些运算符不会在检查想等之前转换操作数的类型。下面的表格描述了该示例代码中的各比较运算符：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; var1 = &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, var2 = &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;运算符&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;描述&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;返回true的示例1&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;返回true的示例2&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;等于 (&lt;code&gt;==&lt;/code&gt;)&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;如果两边操作数相等时返回true。&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;3 == var1&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;“3” == var1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;不等于 (&lt;code&gt;!=&lt;/code&gt;)&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;如果两边操作数不相等时返回true。&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;var1 != 4&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;var2 != “3”&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;全等于 (&lt;code&gt;===&lt;/code&gt;)&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;两边操作数相等且类型相同时返回true。&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;3 === var1&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;4 === var2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;不全等于 (&lt;code&gt;!==&lt;/code&gt;)&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;两边操作数不相等或类型不同时返回true。&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;var1 !== “3”&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;3 !== ‘3’&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;大于 (&lt;code&gt;&amp;gt;&lt;/code&gt;)&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;左边的操作数大于右边的操作数返回true。&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;var2 &amp;gt; var1&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;“12” &amp;gt; 2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;大于等于 (&lt;code&gt;&amp;gt;=&lt;/code&gt;)&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;左边的操作数大于或等于右边的操作数返回true。&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;var2 &amp;gt;= var1&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;var1 &amp;gt;= 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;小于 (&lt;code&gt;&amp;lt;&lt;/code&gt;)&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;左边的操作数小于右边的操作数返回true。&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;var1 &amp;lt; var2&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;“2” &amp;lt; 12&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;小于等于 (&lt;code&gt;&amp;lt;=&lt;/code&gt;)&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;左边的操作数小于或等于右边的操作数返回true。&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;var1 &amp;lt;= var2&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;var2 &amp;lt;= 5&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&quot;u7B97_u672F_u8FD0_u7B97_u7B26&quot;&gt;&lt;a href=&quot;#u7B97_u672F_u8FD0_u7B97_u7B26&quot; class=&quot;headerlink&quot; title=&quot;算术运算符&quot;&gt;&lt;/a&gt;算术运算符&lt;/h3&gt;&lt;p&gt;算术运算符使用数值作为操作数并返回一个数值，标准的算术运算符就是加减乘除(&lt;code&gt;+ - * /&lt;/code&gt;)。当操作数是浮点数时，这些运算符表现得跟它们在大多数编程语言中一样，例如:&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;/* prints 0.5 */&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; == &lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt; / &lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;/* also this is true */&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;另外，JavaScript 还提供了如下的算术运算符：&lt;/p&gt;
&lt;h4 id=&quot;u6C42_u4F59_uFF08_25_uFF09&quot;&gt;&lt;a href=&quot;#u6C42_u4F59_uFF08_25_uFF09&quot; class=&quot;headerlink&quot; title=&quot;求余（%）&quot;&gt;&lt;/a&gt;求余（&lt;code&gt;%&lt;/code&gt;）&lt;/h4&gt;&lt;p&gt;二元运算符，返回相除之后的余数。&lt;/p&gt;
&lt;p&gt;如：13 % 5 返回 3&lt;/p&gt;
&lt;h4 id=&quot;u81EA_u589E_uFF08++_uFF09&quot;&gt;&lt;a href=&quot;#u81EA_u589E_uFF08++_uFF09&quot; class=&quot;headerlink&quot; title=&quot;自增（++）&quot;&gt;&lt;/a&gt;自增（&lt;code&gt;++&lt;/code&gt;）&lt;/h4&gt;&lt;p&gt;一元运算符，将操作数的值加一。&lt;/p&gt;
&lt;p&gt;如果放在操作数前面 (&lt;strong&gt;++x&lt;/strong&gt;)，则返回加一后的值；如果放在操作数后面 (&lt;strong&gt;x++&lt;/strong&gt;)，则返回操作数原值,然后再将操作数加一。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; x=&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(++x); &lt;span class=&quot;comment&quot;&gt;//4&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(x); &lt;span class=&quot;comment&quot;&gt;//4&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; y=&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(y++); &lt;span class=&quot;comment&quot;&gt;//3&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(y); &lt;span class=&quot;comment&quot;&gt;//4&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;u81EA_u51CF_uFF08-_uFF09&quot;&gt;&lt;a href=&quot;#u81EA_u51CF_uFF08-_uFF09&quot; class=&quot;headerlink&quot; title=&quot;自减（--）&quot;&gt;&lt;/a&gt;自减（&lt;code&gt;--&lt;/code&gt;）&lt;/h4&gt;&lt;p&gt;一元运算符，将操作数的值减一。前后缀两种用法的返回值类似自增运算符。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; x=&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(--x); &lt;span class=&quot;comment&quot;&gt;//输出2&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; y=&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(y--);&lt;span class=&quot;comment&quot;&gt;//输出3&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;u4E00_u5143_u8D1F_u503C_u7B26_uFF08-_uFF09&quot;&gt;&lt;a href=&quot;#u4E00_u5143_u8D1F_u503C_u7B26_uFF08-_uFF09&quot; class=&quot;headerlink&quot; title=&quot;一元负值符（-）&quot;&gt;&lt;/a&gt;一元负值符（&lt;code&gt;-&lt;/code&gt;）&lt;/h4&gt;&lt;p&gt;一元运算符，返回操作数的负值。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; x=&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(-x); &lt;span class=&quot;comment&quot;&gt;//输出-3&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;u4F4D_u8FD0_u7B97_u7B26&quot;&gt;&lt;a href=&quot;#u4F4D_u8FD0_u7B97_u7B26&quot; class=&quot;headerlink&quot; title=&quot;位运算符&quot;&gt;&lt;/a&gt;位运算符&lt;/h3&gt;&lt;p&gt;位运算符有七种，了解即可，具体用法不作解释：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;按位与：&lt;code&gt;a &amp;amp; b&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;按位或：&lt;code&gt;a | b&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;按位异或：&lt;code&gt;a ^ b&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;按位反：&lt;code&gt;~a&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;左移：&lt;code&gt;a &amp;lt;&amp;lt; b&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;右移：&lt;code&gt;a &amp;gt;&amp;gt; b&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;无符号右移：&lt;code&gt;a &amp;gt;&amp;gt;&amp;gt; b&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;u903B_u8F91_u8FD0_u7B97_u7B26&quot;&gt;&lt;a href=&quot;#u903B_u8F91_u8FD0_u7B97_u7B26&quot; class=&quot;headerlink&quot; title=&quot;逻辑运算符&quot;&gt;&lt;/a&gt;逻辑运算符&lt;/h3&gt;&lt;p&gt;逻辑运算符常用于布尔（逻辑）值之间；当操作数都是布尔值时，返回值也是布尔值。 不过实际上&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;和&lt;code&gt;||&lt;/code&gt;返回的是一个特定的操作数的值，所以当它用于非布尔值的时候，返回值就可能是非布尔值。 逻辑运算符的描述如下。&lt;/p&gt;
&lt;h4 id=&quot;u903B_u8F91_u4E0E_uFF08_26amp_3B_26amp_3B_uFF09&quot;&gt;&lt;a href=&quot;#u903B_u8F91_u4E0E_uFF08_26amp_3B_26amp_3B_uFF09&quot; class=&quot;headerlink&quot; title=&quot;逻辑与（&amp;amp;&amp;amp;）&quot;&gt;&lt;/a&gt;逻辑与（&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;）&lt;/h4&gt;&lt;p&gt;对于&lt;code&gt;expr1 &amp;amp;&amp;amp; expr2&lt;/code&gt;，如果 expr1 能被转换为 false，那么返回 expr1；否则，返回 expr2 。因此，&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;用于布尔值时，当操作数都为 true 时返回 true；否则返回 false。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a1 =  &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;     &lt;span class=&quot;comment&quot;&gt;// t &amp;amp;&amp;amp; t returns true&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a2 =  &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;    &lt;span class=&quot;comment&quot;&gt;// t &amp;amp;&amp;amp; f returns false&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a3 = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;     &lt;span class=&quot;comment&quot;&gt;// f &amp;amp;&amp;amp; t returns false&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a4 = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt; &amp;amp;&amp;amp; (&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; == &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// f &amp;amp;&amp;amp; f returns false&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a5 = &lt;span class=&quot;string&quot;&gt;&quot;Cat&quot;&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&quot;string&quot;&gt;&quot;Dog&quot;&lt;/span&gt;;    &lt;span class=&quot;comment&quot;&gt;// t &amp;amp;&amp;amp; t returns Dog&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a6 = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&quot;string&quot;&gt;&quot;Cat&quot;&lt;/span&gt;;    &lt;span class=&quot;comment&quot;&gt;// f &amp;amp;&amp;amp; t returns false&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a7 = &lt;span class=&quot;string&quot;&gt;&quot;Cat&quot;&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;    &lt;span class=&quot;comment&quot;&gt;// t &amp;amp;&amp;amp; f returns false&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;u903B_u8F91_u6216_uFF08_7C_7C_uFF09&quot;&gt;&lt;a href=&quot;#u903B_u8F91_u6216_uFF08_7C_7C_uFF09&quot; class=&quot;headerlink&quot; title=&quot;逻辑或（||）&quot;&gt;&lt;/a&gt;逻辑或（&lt;code&gt;||&lt;/code&gt;）&lt;/h4&gt;&lt;p&gt;对于&lt;code&gt;expr1 || expr2&lt;/code&gt;，如果 expr1 能被转换为 true，那么返回 expr1；否则，返回 expr2 。因此，&lt;code&gt;||&lt;/code&gt;用于布尔值时，当任何一个操作数为 true 则返回 true；如果操作数都是 false 则返回 false。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; o1 =  &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; || &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;     &lt;span class=&quot;comment&quot;&gt;// t || t returns true&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; o2 = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt; || &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;     &lt;span class=&quot;comment&quot;&gt;// f || t returns true&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; o3 =  &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; || &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;    &lt;span class=&quot;comment&quot;&gt;// t || f returns true&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; o4 = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt; || (&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; == &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// f || f returns false&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; o5 = &lt;span class=&quot;string&quot;&gt;&quot;Cat&quot;&lt;/span&gt; || &lt;span class=&quot;string&quot;&gt;&quot;Dog&quot;&lt;/span&gt;;    &lt;span class=&quot;comment&quot;&gt;// t || t returns Cat&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; o6 = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt; || &lt;span class=&quot;string&quot;&gt;&quot;Cat&quot;&lt;/span&gt;;    &lt;span class=&quot;comment&quot;&gt;// f || t returns Cat&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; o7 = &lt;span class=&quot;string&quot;&gt;&quot;Cat&quot;&lt;/span&gt; || &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;    &lt;span class=&quot;comment&quot;&gt;// t || f returns Cat&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;u903B_u8F91_u975E_uFF08_7E_uFF09&quot;&gt;&lt;a href=&quot;#u903B_u8F91_u975E_uFF08_7E_uFF09&quot; class=&quot;headerlink&quot; title=&quot;逻辑非（~）&quot;&gt;&lt;/a&gt;逻辑非（&lt;code&gt;~&lt;/code&gt;）&lt;/h4&gt;&lt;p&gt;如果操作数能够转换为 true 则返回 false；否则返回 true。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; n1 = !&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;  &lt;span class=&quot;comment&quot;&gt;// !t returns false&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; n2 = !&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// !f returns true&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; n3 = !&lt;span class=&quot;string&quot;&gt;&quot;Cat&quot;&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// !t returns false&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;u6761_u4EF6_u8FD0_u7B97_u7B26&quot;&gt;&lt;a href=&quot;#u6761_u4EF6_u8FD0_u7B97_u7B26&quot; class=&quot;headerlink&quot; title=&quot;条件运算符&quot;&gt;&lt;/a&gt;条件运算符&lt;/h3&gt;&lt;p&gt;条件运算符是 JavaScript 中唯一需要三个操作数的运算符。运算的结果根据给定条件在两个值中取其一。语法为：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;condition ? val1 : val2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果 condition 为 true，则结果取 val1。否则为 val2。你能够在任何允许使用标准运算符的地方使用条件运算符。&lt;/p&gt;
&lt;p&gt;例如，&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; status = (age &amp;gt;= &lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;) ? &lt;span class=&quot;string&quot;&gt;&quot;adult&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;minor&quot;&lt;/span&gt;;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当 age 大于等于18的时候，语句将 “adult” 赋值给 status；否则将 “minor” 赋值给 status 。&lt;/p&gt;
&lt;h3 id=&quot;u8FD0_u7B97_u7B26_u7684_u4F18_u5148_u7EA7&quot;&gt;&lt;a href=&quot;#u8FD0_u7B97_u7B26_u7684_u4F18_u5148_u7EA7&quot; class=&quot;headerlink&quot; title=&quot;运算符的优先级&quot;&gt;&lt;/a&gt;运算符的优先级&lt;/h3&gt;&lt;p&gt;运算符的优先级确定计算表达式时，他们的应用顺序。您可以通过使用括号改写运算符优先级。下表描述符的优先级，从最高到最低：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;Operator type&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;Individual operators&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;member&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;. []&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;call / create instance&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;() new&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;negation/increment&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;! ~ - + ++ -- typeof void delete&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;multiply/divide&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;* / %&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;addition/subtraction&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;+ -&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;bitwise shift&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;&amp;lt;&amp;lt; &amp;gt;&amp;gt; &amp;gt;&amp;gt;&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;relational&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;&amp;lt; &amp;lt;= &amp;gt; &amp;gt;= in instanceof&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;equality&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;== != === !==&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;bitwise-and&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;&amp;amp;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;bitwise-xor&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;^&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;bitwise-or&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;`&lt;/td&gt;
&lt;td&gt;`&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;logical-and&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;logical-or&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;`&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;`&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;conditional&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;?:&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;assignment&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;`= += -= *= /= %= &amp;lt;&amp;lt;= &amp;gt;&amp;gt;= &amp;gt;&amp;gt;&amp;gt;= &amp;amp;= ^=&lt;/td&gt;
&lt;td&gt;=`&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;comma&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;,&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;上表不需要死记硬背，遇到无法判断优先级的情况下使用括号即可。&lt;/p&gt;
&lt;h2 id=&quot;u8868_u8FBE_u5F0F_uFF08Expressions_uFF09&quot;&gt;&lt;a href=&quot;#u8868_u8FBE_u5F0F_uFF08Expressions_uFF09&quot; class=&quot;headerlink&quot; title=&quot;表达式（Expressions）&quot;&gt;&lt;/a&gt;表达式（Expressions）&lt;/h2&gt;&lt;p&gt;表达式是代码的任何有效的单元解析为一个值。从概念上讲，有两种类型的表达式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将值分配给一个变量：如表达式 &lt;strong&gt;x=7&lt;/strong&gt;。 &lt;/li&gt;
&lt;li&gt;仅仅有一个值：如代码 &lt;strong&gt;3 + 4&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;u672C_u8282_u4EFB_u52A1&quot;&gt;&lt;a href=&quot;#u672C_u8282_u4EFB_u52A1&quot; class=&quot;headerlink&quot; title=&quot;本节任务&quot;&gt;&lt;/a&gt;本节任务&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;学习慕课网提供的&lt;a href=&quot;http://www.imooc.com/learn/10&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;br&gt;《JavaScript进阶篇》&lt;/a&gt;中 2-5 至 2-13 的内容，并完成练习。&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;必备知识：前面课程的学习&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;u6982_u8FF0&quot;&gt;&lt;a href=&quot;#u6982_u8FF0&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;本章主要介绍 JavaScript 的表达式和运算符，包括了赋值，比较，算数，按位，逻辑，字符串，三元等等。列举所有的运算符，但是不会全部讲解，只讲解实际编程中会用到的几种。&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="http://ursb.me/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Before Coding" scheme="http://ursb.me/tags/Before-Coding/"/>
    
  </entry>
  
  <entry>
    <title>Before Coding [12] - JavaScript - 数据类型</title>
    <link href="http://ursb.me/2016/07/13/Before-Coding-12-JavaScript-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
    <id>http://ursb.me/2016/07/13/Before-Coding-12-JavaScript-数据类型/</id>
    <published>2016-07-13T09:28:03.000Z</published>
    <updated>2016-07-13T08:15:48.000Z</updated>
    
    <content type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;blockquote&gt;
&lt;p&gt;必备知识：前面课程的学习&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;u6982_u8FF0&quot;&gt;&lt;a href=&quot;#u6982_u8FF0&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;JavaScript 语言可以识别下面 7 种不同类型的值：&lt;/p&gt;
&lt;p&gt;其中六种是&lt;strong&gt;原型&lt;/strong&gt;的数据类型:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Boolean&lt;/strong&gt;.  布尔值，true 和 false.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Null&lt;/strong&gt;. 一个表明 null 值的特殊关键字。 JavaScript 是大小写敏感的，因此 null 与 Null、NULL或其他变量完全不同。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Undefined&lt;/strong&gt;.  变量未定义时的属性。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Number&lt;/strong&gt;.  表示数字，例如： 42 或者 3.14159。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;String&lt;/strong&gt;.  表示字符串，例如：”Howdy”。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Symbol&lt;/strong&gt; . 一种数据类型，它的实例是唯一且不可改变的。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以及 &lt;strong&gt;Object&lt;/strong&gt; 对象。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;仅凭这些为数不多的数据类型，在你的应用程序中它們就能够执行有用的功能。本节主要介绍除 Object 以外的六种数据类型，并讲解其数据转换。&lt;/p&gt;
&lt;h2 id=&quot;u6570_u636E_u7C7B_u578B_u7684_u8F6C_u6362&quot;&gt;&lt;a href=&quot;#u6570_u636E_u7C7B_u578B_u7684_u8F6C_u6362&quot; class=&quot;headerlink&quot; title=&quot;数据类型的转换&quot;&gt;&lt;/a&gt;数据类型的转换&lt;/h2&gt;&lt;p&gt;JavaScript 是一种动态类型语言，这意味着你声明变量时可以不必指定数据类型，而数据类型会在脚本执行需要时自动转换。那么，你可以这样来定义变量： &lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; answer = &lt;span class=&quot;number&quot;&gt;42&lt;/span&gt;;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后，你还可以给同一个变量分配一个字符串值，例如：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;answer = &lt;span class=&quot;string&quot;&gt;&quot;Thanks for all the fish...&quot;&lt;/span&gt;;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;因为 JavaScript 是动态类型的，这样的指定并不会提示出错。&lt;/p&gt;
&lt;p&gt;JavaScript 是一种弱类型或者说动态语言。这意味着你不用提前声明变量的类型，在程序运行过程中，类型会被自动确定。这也意味着你可以使用同一个变量保存不同类型的数据：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; foo = &lt;span class=&quot;number&quot;&gt;42&lt;/span&gt;;    &lt;span class=&quot;comment&quot;&gt;// foo is a Number now&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; foo = &lt;span class=&quot;string&quot;&gt;&quot;bar&quot;&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// foo is a String now&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; foo = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;  &lt;span class=&quot;comment&quot;&gt;// foo is a Boolean now&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在涉及加法运算符（&lt;code&gt;+&lt;/code&gt;）的数字和字符串表达式中，JavaScript 会把数字值转换为字符串。例如，假设有如下的语句：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;x = &lt;span class=&quot;string&quot;&gt;&quot;The answer is &quot;&lt;/span&gt; + &lt;span class=&quot;number&quot;&gt;42&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;// &quot;The answer is 42&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;y = &lt;span class=&quot;number&quot;&gt;42&lt;/span&gt; + &lt;span class=&quot;string&quot;&gt;&quot; is the answer&quot;&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;// &quot;42 is the answer&quot;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在涉及其它运算符时，JavaScript 语言不会把数字变为字符。例如：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;37&quot;&lt;/span&gt; - &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;// 30&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;37&quot;&lt;/span&gt; + &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;// &quot;377&quot;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面的代码中，第一例是数学运算，第二例是字符串运算。&lt;/p&gt;
&lt;h3 id=&quot;u5B57_u7B26_u4E32_u8F6C_u6362_u4E3A_u6570_u5B57&quot;&gt;&lt;a href=&quot;#u5B57_u7B26_u4E32_u8F6C_u6362_u4E3A_u6570_u5B57&quot; class=&quot;headerlink&quot; title=&quot;字符串转换为数字&quot;&gt;&lt;/a&gt;字符串转换为数字&lt;/h3&gt;&lt;p&gt;有一些方法可以将内存中表示一个数字的字符串转换为对应的数字。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;parseInt()&lt;/code&gt; 和 &lt;code&gt;parseFloat()&lt;/code&gt;&lt;br&gt;parseInt 仅能够返回整数，所以使用它会丢失小数部分。另外，调用 parseInt 时最好总是带上进制参数，这个参数用于指定使用哪一种数制。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;单目加法运算符&lt;br&gt;将字符串转换为数字的另一种方法是使用单目加法运算符。&lt;/p&gt;
 &lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;1.1&quot;&lt;/span&gt; + &lt;span class=&quot;string&quot;&gt;&quot;1.1&quot;&lt;/span&gt; = &lt;span class=&quot;string&quot;&gt;&quot;1.11.1&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;(+&lt;span class=&quot;string&quot;&gt;&quot;1.1&quot;&lt;/span&gt;) + (+&lt;span class=&quot;string&quot;&gt;&quot;1.1&quot;&lt;/span&gt;) = &lt;span class=&quot;number&quot;&gt;2.2&lt;/span&gt;   &lt;span class=&quot;comment&quot;&gt;// 注：加入括号为清楚起见，不是必需的。&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;必备知识：前面课程的学习&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;u6982_u8FF0&quot;&gt;&lt;a href=&quot;#u6982_u8FF0&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;JavaScript 语言可以识别下面 7 种不同类型的值：&lt;/p&gt;
&lt;p&gt;其中六种是&lt;strong&gt;原型&lt;/strong&gt;的数据类型:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Boolean&lt;/strong&gt;.  布尔值，true 和 false.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Null&lt;/strong&gt;. 一个表明 null 值的特殊关键字。 JavaScript 是大小写敏感的，因此 null 与 Null、NULL或其他变量完全不同。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Undefined&lt;/strong&gt;.  变量未定义时的属性。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Number&lt;/strong&gt;.  表示数字，例如： 42 或者 3.14159。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;String&lt;/strong&gt;.  表示字符串，例如：”Howdy”。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Symbol&lt;/strong&gt; . 一种数据类型，它的实例是唯一且不可改变的。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以及 &lt;strong&gt;Object&lt;/strong&gt; 对象。&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="http://ursb.me/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Before Coding" scheme="http://ursb.me/tags/Before-Coding/"/>
    
  </entry>
  
  <entry>
    <title>Before Coding [11] - JavaScript - 变量和常量</title>
    <link href="http://ursb.me/2016/07/12/Before-Coding-11-JavaScript-%E5%8F%98%E9%87%8F%E5%92%8C%E5%B8%B8%E9%87%8F/"/>
    <id>http://ursb.me/2016/07/12/Before-Coding-11-JavaScript-变量和常量/</id>
    <published>2016-07-11T17:39:59.000Z</published>
    <updated>2016-07-12T02:11:06.000Z</updated>
    
    <content type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;blockquote&gt;
&lt;p&gt;必备知识：前面课程的学习&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;JavaScript__u57FA_u7840_u77E5_u8BC6&quot;&gt;&lt;a href=&quot;#JavaScript__u57FA_u7840_u77E5_u8BC6&quot; class=&quot;headerlink&quot; title=&quot;JavaScript 基础知识&quot;&gt;&lt;/a&gt;JavaScript 基础知识&lt;/h2&gt;&lt;p&gt;JavaScript 的很多语法借鉴自 Java，但也受 Awk，Perl 和 Python 影响。 同时，JavaScript 是大小写敏感的，使用 Unicode 字符集。&lt;/p&gt;
&lt;p&gt;在 JavaScript 中，语句用分号分隔（&lt;strong&gt;;&lt;/strong&gt;），它也具有分号自动插入功能来结束语句。但是，建议随时添加分号结束你的语句以避免副作用。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;JavaScript 的注释语法跟 C++ 和许多其他语言相同：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 单行注释&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* 这是一个多行注释 &lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   多行注释&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;*/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* 但是, 你不能, /* 嵌套注释 */&lt;/span&gt; 语法错误 *&lt;span class=&quot;regexp&quot;&gt;/&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;u53D8_u91CF_uFF08Variables_uFF09&quot;&gt;&lt;a href=&quot;#u53D8_u91CF_uFF08Variables_uFF09&quot; class=&quot;headerlink&quot; title=&quot;变量（Variables）&quot;&gt;&lt;/a&gt;变量（Variables）&lt;/h2&gt;&lt;p&gt;在编程中，使用变量来为值命名。在 JavaScript 中，一个标识符必须以字母、下划线（&lt;strong&gt;_&lt;/strong&gt;）或者美元（&lt;strong&gt;$&lt;/strong&gt;）符号开头；后续的字符可以包含数字（&lt;strong&gt;0-9&lt;/strong&gt;）。因为 JavaScript 语言是区分大小写的，这里所指的字母可以是大写的 “A” 到字母 “Z” 和小写的 “a” 到 “z” 。&lt;/p&gt;
&lt;h3 id=&quot;u58F0_u660E_u53D8_u91CF_uFF08Declaring_variables_uFF09&quot;&gt;&lt;a href=&quot;#u58F0_u660E_u53D8_u91CF_uFF08Declaring_variables_uFF09&quot; class=&quot;headerlink&quot; title=&quot;声明变量（Declaring variables）&quot;&gt;&lt;/a&gt;声明变量（Declaring variables）&lt;/h3&gt;&lt;p&gt;你可以用以下三种方式声明变量：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;使用关键词 var。&lt;/strong&gt;例如，&lt;strong&gt;var x = 42&lt;/strong&gt;。这个语法可以同时用来声明局部和全局变量。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;直接赋值。&lt;/strong&gt;例如，&lt;strong&gt;x = 42&lt;/strong&gt;。这样就声明了一个全局变量并会导致 JavaScript 编译时产生一个严格警告。因而你应避免使用这种非常规格式。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;使用关键词 let。&lt;/strong&gt;例如，&lt;strong&gt;let y = 13&lt;/strong&gt;。这个语法可以用来声明语句块代码段的局部变量。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;u5BF9_u53D8_u91CF_u6C42_u503C_uFF08Evaluating_variables_uFF09&quot;&gt;&lt;a href=&quot;#u5BF9_u53D8_u91CF_u6C42_u503C_uFF08Evaluating_variables_uFF09&quot; class=&quot;headerlink&quot; title=&quot;对变量求值（Evaluating variables）&quot;&gt;&lt;/a&gt;对变量求值（Evaluating variables）&lt;/h3&gt;&lt;p&gt;用 &lt;strong&gt;var&lt;/strong&gt; 或 &lt;strong&gt;let&lt;/strong&gt; 声明的未赋初值的变量，值会被设定为 &lt;strong&gt;undefined&lt;/strong&gt;（即未定义值，本身也是一个值）。&lt;/p&gt;
&lt;p&gt;试图访问一个未初始化的变量会导致一个 ReferenceError 异常被抛出：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;The value of a is &quot;&lt;/span&gt; + a); &lt;span class=&quot;comment&quot;&gt;// logs &quot;的值未定义&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;The value of b is &quot;&lt;/span&gt; + b); &lt;span class=&quot;comment&quot;&gt;// 抛出ReferenceError异常&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;你可以使用 undefined 来确定变量是否已赋值。以下的代码中，变量 input 未被赋值，因而 if 条件语句的求值结果是 true 。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; input;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(input === &lt;span class=&quot;literal&quot;&gt;undefined&lt;/span&gt;)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  	doThis();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	doThat();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;undefined 值在布尔类型环境中会被当作 false 。例如，下面的代码将运行函数 myFunction ，因为数组 myArray 中的元素未被赋值：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; myArray = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Array&lt;/span&gt;();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!myArray[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]) myFunction();&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;数值类型环境中 undefined 值会被转换为 &lt;strong&gt;NaN&lt;/strong&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;NaN为“Not a Number”，不是一个数字的缩写。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;a + &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// Evaluates to NaN&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当你对一个空变量求值时，空值null在数值类型环境中会被当作０来对待，而布尔类型环境中会被当作false&lt;br&gt;。例如：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; n = &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(n * &lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// logs 0&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;u53D8_u91CF_u7684_u57DF_uFF08Variable_scope_uFF09&quot;&gt;&lt;a href=&quot;#u53D8_u91CF_u7684_u57DF_uFF08Variable_scope_uFF09&quot; class=&quot;headerlink&quot; title=&quot;变量的域（Variable scope）&quot;&gt;&lt;/a&gt;变量的域（Variable scope）&lt;/h3&gt;&lt;p&gt;在所有函数之外声明的变量，叫做&lt;strong&gt;全局变量&lt;/strong&gt;，因为它可被当前文档中的其他代码所访问。&lt;br&gt;在函数内部声明的变量，叫做&lt;strong&gt;局部变量&lt;/strong&gt;，因为它只能在该函数内部访问。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;全局变量实际上是全局对象的属性。在网页中，缺省的全局对象是 &lt;strong&gt;window&lt;/strong&gt;，所以你可以用形如 &lt;strong&gt;window.variable&lt;/strong&gt;的语法来设置和访问全局变量。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;语句块中声明的变量将成为语句块所在代码段的局部变量。例如，如下的代码将在控制台输出 5，因为 x 的作用域是声明了 x 的那个函数（或全局范围），而不是 if 语句块。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; x = &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(x); &lt;span class=&quot;comment&quot;&gt;// 5&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果使用 let 声明，上述行为将发生变化。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; y = &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(y); &lt;span class=&quot;comment&quot;&gt;// ReferenceError: y is not defined&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;u5E38_u91CF_uFF08Constants_uFF09&quot;&gt;&lt;a href=&quot;#u5E38_u91CF_uFF08Constants_uFF09&quot; class=&quot;headerlink&quot; title=&quot;常量（Constants）&quot;&gt;&lt;/a&gt;常量（Constants）&lt;/h2&gt;&lt;p&gt;你可以用关键字 &lt;strong&gt;const&lt;/strong&gt; 创建一个只读（&lt;strong&gt;read-only&lt;/strong&gt;）的常量。&lt;/p&gt;
&lt;p&gt;常量标识符的命名规则和变量的相同：必须以字母、下划线或美元符号开头并可以包含有字母、数字或下划线。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; prefix = &lt;span class=&quot;string&quot;&gt;&#39;212&#39;&lt;/span&gt;;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;常量不可以通过赋值改变其值，也不可以在脚本运行时重新声明。它必须被初始化为某个值。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;常量的作用域规则与 &lt;strong&gt;let&lt;/strong&gt; 块级作用域变量相同。若 &lt;strong&gt;const&lt;/strong&gt; 关键字被省略了，该标识符将被视为变量。&lt;/p&gt;
&lt;p&gt;在同一作用域中，不能用与变量或函数同样的名字来命名常量。例如：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// THIS WILL CAUSE AN ERROR&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;f&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; f = &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// THIS WILL CAUSE AN ERROR ALSO&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;f&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; g = &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; g;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;u672C_u8282_u4EFB_u52A1&quot;&gt;&lt;a href=&quot;#u672C_u8282_u4EFB_u52A1&quot; class=&quot;headerlink&quot; title=&quot;本节任务&quot;&gt;&lt;/a&gt;本节任务&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;学习慕课网提供的&lt;a href=&quot;http://www.imooc.com/learn/10&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;br&gt;《JavaScript进阶篇》&lt;/a&gt;中 1-1 至 2-4 的内容，并完成练习。&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;必备知识：前面课程的学习&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;JavaScript__u57FA_u7840_u77E5_u8BC6&quot;&gt;&lt;a href=&quot;#JavaScript__u57FA_u7840_u77E5_u8BC6&quot; class=&quot;headerlink&quot; title=&quot;JavaScript 基础知识&quot;&gt;&lt;/a&gt;JavaScript 基础知识&lt;/h2&gt;&lt;p&gt;JavaScript 的很多语法借鉴自 Java，但也受 Awk，Perl 和 Python 影响。 同时，JavaScript 是大小写敏感的，使用 Unicode 字符集。&lt;/p&gt;
&lt;p&gt;在 JavaScript 中，语句用分号分隔（&lt;strong&gt;;&lt;/strong&gt;），它也具有分号自动插入功能来结束语句。但是，建议随时添加分号结束你的语句以避免副作用。&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="http://ursb.me/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Before Coding" scheme="http://ursb.me/tags/Before-Coding/"/>
    
  </entry>
  
  <entry>
    <title>Before Coding [10] - JavaScript - 学习前的准备</title>
    <link href="http://ursb.me/2016/07/11/Before-Coding-10-JavaScript-%E5%AD%A6%E4%B9%A0%E5%89%8D%E7%9A%84%E5%87%86%E5%A4%87/"/>
    <id>http://ursb.me/2016/07/11/Before-Coding-10-JavaScript-学习前的准备/</id>
    <published>2016-07-10T18:23:50.000Z</published>
    <updated>2016-07-12T02:11:11.000Z</updated>
    
    <content type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;blockquote&gt;
&lt;p&gt;必备知识：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对互联网和万维网 (WWW) 有基本的认识。&lt;/li&gt;
&lt;li&gt;熟悉HTML。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;JavaScript__u7B80_u4ECB&quot;&gt;&lt;a href=&quot;#JavaScript__u7B80_u4ECB&quot; class=&quot;headerlink&quot; title=&quot;JavaScript 简介&quot;&gt;&lt;/a&gt;JavaScript 简介&lt;/h2&gt;&lt;p&gt;JavaScript 是一门跨平台、面向对象的轻量级脚本语言。 在主机环境中， JavaScript 能够通过连接环境对象而实现可控制编译。&lt;/p&gt;
&lt;p&gt;JavaScript 内置了一个包含一系列对象的标准库，比如数组、日期、数学和一个语言元素核心集合包括操作符，流程控制符以及语句等。JavaScript 的核心部分可以通过组合已有语言核心对象来扩展语言以适应不同用途，例如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;客户端的 JavaScript 通过提供控制浏览器及其文档对象模型（DOM）的对象来扩展语言核心。例如：客户端版本直接支持应用将元素放在在HTML表单中并且支持响应用户事件比如鼠标点击、表单提交和页面导航。&lt;/li&gt;
&lt;li&gt;服务端的 JavaScript 则通过提供有关在服务器上运行 JavaScript 的对象来可扩展语言核心。例如：服务端版本直接支持应用和数据库通信，提供应用不同调用间的信息连续性，或者在服务器上执行文件操作。&lt;/li&gt;
&lt;/ul&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;blockquote&gt;
&lt;p&gt;服务端的 JavaScript 通常使用 Node.js 技术。Node.js 是一个基于 Chrome V8 引擎的 JavaScript 运行环境。Node.js 使用了一个事件驱动、非阻塞式 I/O 的模型，使其轻量又高效。Node.js 的包管理器 npm，是全球最大的开源库生态系统。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;JavaScript__u548C_Java&quot;&gt;&lt;a href=&quot;#JavaScript__u548C_Java&quot; class=&quot;headerlink&quot; title=&quot;JavaScript 和 Java&quot;&gt;&lt;/a&gt;JavaScript 和 Java&lt;/h2&gt;&lt;p&gt;JavaScript 和 Java 有一些共性但是在另一些方面有着根本性区别。JavaScript 名称上酷似 Java，但是并&lt;strong&gt;没有Java 的静态类型和强类型检查特性。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;与 Java 通过声明式构建类的编译时系统不同，JavaScript 采用基于少量的数据类型如数字、布尔、字符串值的运行时系统。JavaScript 拥有基于原型的对象模型提供的动态继承，也就是说，独立对象的继承是可以改变的。 &lt;strong&gt;JavaScript 支持匿名函数，函数也可以作为对象的属性执行。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;与 Java 相比，Javascript 是一门形式自由的语言。&lt;strong&gt;你不必声明所有的变量，类和方法。你不必关心方法是否是 共有、私有或者受保护的，也不需要实现接口。无需显式指定变量、参数、方法返回值的数据类型。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Java 是基于类的编程语言，设计的初衷就是为了快速执行和类型安全的。类型安全，举例来说，你不能将一个Java 整数变量转化为一个对象引用，或者由J ava 字节码访问专有存储器。Java 基于类的模型，意味着程序包含专有的类及其方法。Java 的类继承和强类型要求紧耦合的对象层级结构。这些要求使得 Java 编程比 JavaScript 要复杂的多。&lt;/p&gt;
&lt;p&gt;相比之下，JavaScript 语句精简、拥有动态类型，为更多开发者提供了一种语法简单、内置功能强大以及用最小需求创建对象的编程工具。&lt;/p&gt;
&lt;p&gt;具体对比如下表：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;JavaScript&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;Java&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;面向对象。不区分对象类型。通过原型机制继承，任何对象的属性和方法均可以被动态添加。&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;基于类系统。分为类和实例，通过类层级的定义实现继承。不能动态增加对象或类的属性或方法。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;变量类型不需要提前声明(动态类型)。&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;变量类型必须提前声明(静态类型)。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;所有对象均为实例。&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;类和实例是不同的事物。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;通过构造器函数来定义和创建一组对象。&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;通过类定义来定义类；通过构造器方法来实例化类。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;通过 new 操作符创建单个对象。&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;相同。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;指定一个对象作为原型并且与构造函数一起构建对象的层级结构&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;通过类定义来定义现存类的子类，从而构建对象的层级结构。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;遵循原型链继承属性。&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;遵循类链继承属性。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;构造器函数或原型指定初始的属性集。允许动态地向单个的对象或者整个对象集中添加或移除属性。&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;类定义指定类的所有实例的所有属性。无法在运行时动态添加属性。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&quot;u5F00_u53D1_u8005_u5DE5_u5177&quot;&gt;&lt;a href=&quot;#u5F00_u53D1_u8005_u5DE5_u5177&quot; class=&quot;headerlink&quot; title=&quot;开发者工具&quot;&gt;&lt;/a&gt;开发者工具&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://qiniu.ursb.me/image/2016071102.png-h600.jpg&quot; alt=&quot;Browsers&quot;&gt;&lt;/p&gt;
&lt;p&gt;因为不同浏览器解析出的 HTML 、CSS 与 js 有不同，各个浏览器的兼容性不一样，所以在浏览器的选择上，推荐使用 Google 的 &lt;strong&gt;Chrome 浏览器&lt;/strong&gt;或者 Mozilla 的 &lt;strong&gt;FireFox 浏览器&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://qiniu.ursb.me/image/2016071101.jpg&quot; alt=&quot;Chrome vs FireFox&quot;&gt;&lt;/p&gt;
&lt;p&gt;而 FireFox 内置了两款非常棒的工具用来实验 JavaScript：&lt;em&gt;浏览器控制台&lt;/em&gt;和&lt;em&gt;代码草稿纸&lt;/em&gt;，但是 Chrome 等浏览器只有开发者控制台（按 &lt;code&gt;F12&lt;/code&gt; 可以调出开发者控制台），并没有代码草稿纸，所以在编写成段 js 代码的时候就显得有些麻烦。但是 FireFox 提供了代码草稿纸，对于初学者而言很方便的去学习 js 。（当然啦，还有很多种方法可以运行 js 的，比如可以使用 NodeJS 的命令行工具去运行编写好的 js 文件。）&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://qiniu.ursb.me/image/2016071104.png&quot; alt=&quot;Scratchpad&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;笔者习惯于使用 Chrome，所以以后的开发环境均是基于 Chrome 环境的，FireFox 兼容性与 Chrome 相当，所以使用 FireFox 也可以。但是 Chrome 的官网被墙了，所以下载比较麻烦，可以参考我的另一篇离线下载 Chrome 的教程——&lt;a href=&quot;http://ursb.me/2015/09/11/%E4%B8%8B%E8%BD%BDchrome%E5%90%84%E7%89%88%E6%9C%AC%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85%E5%8C%85/&quot;&gt;下载chrome各版本离线安装包 | Airing的博客&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://qiniu.ursb.me/image/2016071103.png-800.jpg&quot; alt=&quot;开发者控制台&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;关于开发者工具的具体使用，请参考：&lt;a href=&quot;http://wiki.jikexueyuan.com/project/chrome-devtools/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Chrome 开发工具指南 | 极客学院&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Hello_World&quot;&gt;&lt;a href=&quot;#Hello_World&quot; class=&quot;headerlink&quot; title=&quot;Hello World&quot;&gt;&lt;/a&gt;Hello World&lt;/h2&gt;&lt;p&gt;学习 JavaScript 的第一步，打开浏览器的代码调试器尝试写你的第一个 JavaScript 版本的“Hello world”程序。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;greetMe&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;user&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;Hi &quot;&lt;/span&gt; + user;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;greetMe(&lt;span class=&quot;string&quot;&gt;&quot;Airing&quot;&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// &quot;Hi Airing&quot;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在 &lt;em&gt;Scratchpad&lt;/em&gt;（代码草稿纸）中选择要执行的代码，然后点击快捷键 &lt;code&gt;Ctrl+R&lt;/code&gt; 就可以在浏览器中看到选中代码的执行结果。&lt;/p&gt;
&lt;p&gt;在接下来的章节里，该指南将介绍 JavaScript 的语法以及语言特性，届时你将可以使用它编写更加复杂的程序。&lt;/p&gt;
&lt;h2 id=&quot;u672C_u8282_u4EFB_u52A1&quot;&gt;&lt;a href=&quot;#u672C_u8282_u4EFB_u52A1&quot; class=&quot;headerlink&quot; title=&quot;本节任务&quot;&gt;&lt;/a&gt;本节任务&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;安装 Chrome 或 FireFox&lt;/li&gt;
&lt;li&gt;编写并运行本节的 “Hello World” 案例。&lt;/li&gt;
&lt;li&gt;学习慕课网提供的&lt;a href=&quot;http://www.imooc.com/learn/36&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;br&gt;《JavaScript入门篇》&lt;/a&gt;的内容，并完成练习。&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;必备知识：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对互联网和万维网 (WWW) 有基本的认识。&lt;/li&gt;
&lt;li&gt;熟悉HTML。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;JavaScript__u7B80_u4ECB&quot;&gt;&lt;a href=&quot;#JavaScript__u7B80_u4ECB&quot; class=&quot;headerlink&quot; title=&quot;JavaScript 简介&quot;&gt;&lt;/a&gt;JavaScript 简介&lt;/h2&gt;&lt;p&gt;JavaScript 是一门跨平台、面向对象的轻量级脚本语言。 在主机环境中， JavaScript 能够通过连接环境对象而实现可控制编译。&lt;/p&gt;
&lt;p&gt;JavaScript 内置了一个包含一系列对象的标准库，比如数组、日期、数学和一个语言元素核心集合包括操作符，流程控制符以及语句等。JavaScript 的核心部分可以通过组合已有语言核心对象来扩展语言以适应不同用途，例如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;客户端的 JavaScript 通过提供控制浏览器及其文档对象模型（DOM）的对象来扩展语言核心。例如：客户端版本直接支持应用将元素放在在HTML表单中并且支持响应用户事件比如鼠标点击、表单提交和页面导航。&lt;/li&gt;
&lt;li&gt;服务端的 JavaScript 则通过提供有关在服务器上运行 JavaScript 的对象来可扩展语言核心。例如：服务端版本直接支持应用和数据库通信，提供应用不同调用间的信息连续性，或者在服务器上执行文件操作。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="技术" scheme="http://ursb.me/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Before Coding" scheme="http://ursb.me/tags/Before-Coding/"/>
    
  </entry>
  
  <entry>
    <title>Before Coding [9] - 计算机网络 - 服务器</title>
    <link href="http://ursb.me/2016/07/11/Before-Coding-9-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>http://ursb.me/2016/07/11/Before-Coding-9-计算机网络-服务器/</id>
    <published>2016-07-10T18:22:45.000Z</published>
    <updated>2016-07-11T02:48:05.000Z</updated>
    
    <content type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;施工中🚧……&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;施工中🚧……&lt;/p&gt;

    
    </summary>
    
      <category term="技术" scheme="http://ursb.me/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Before Coding" scheme="http://ursb.me/tags/Before-Coding/"/>
    
  </entry>
  
  <entry>
    <title>Before Coding [8] - 计算机网络 - HTTP协议</title>
    <link href="http://ursb.me/2016/07/11/Before-Coding-8-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-HTTP%E5%8D%8F%E8%AE%AE/"/>
    <id>http://ursb.me/2016/07/11/Before-Coding-8-计算机网络-HTTP协议/</id>
    <published>2016-07-10T18:22:21.000Z</published>
    <updated>2016-07-11T02:48:05.000Z</updated>
    
    <content type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;施工中🚧……&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;施工中🚧……&lt;/p&gt;

    
    </summary>
    
      <category term="技术" scheme="http://ursb.me/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Before Coding" scheme="http://ursb.me/tags/Before-Coding/"/>
    
  </entry>
  
  <entry>
    <title>Before Coding [7] - 计算机网络 - URL</title>
    <link href="http://ursb.me/2016/07/10/Before-Coding-7-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-URL/"/>
    <id>http://ursb.me/2016/07/10/Before-Coding-7-计算机网络-URL/</id>
    <published>2016-07-10T01:14:14.000Z</published>
    <updated>2016-07-12T02:11:19.000Z</updated>
    
    <content type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;blockquote&gt;
&lt;p&gt;必备基础：掌握了 HTML 基础。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;u6982_u8FF0&quot;&gt;&lt;a href=&quot;#u6982_u8FF0&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;h3 id=&quot;URL_u7684_u6982_u5FF5&quot;&gt;&lt;a href=&quot;#URL_u7684_u6982_u5FF5&quot; class=&quot;headerlink&quot; title=&quot;URL的概念&quot;&gt;&lt;/a&gt;URL的概念&lt;/h3&gt;&lt;p&gt;URL，Uniform Resource Locator，统一资源定位符，它是一个网页的关键概念，它是浏览器使用的机制来检索Web上的任何已发布的资源。&lt;/p&gt;
&lt;p&gt;一个网址无非是一个给定的独特的资源在网络上的地址。在理论上，每个有效的网址指向一个独特的资源。这些资源可以是一个HTML页面，一个CSS文件，图像，等等。在实践中，也有一些例外，最常见的是一个URL指向不再存在或已移动的资源。作为由Web服务器表示的资源和网址本身是由Web服务器处理的，它是由Web服务器的所有者来仔细管理该资源及其相关的网址。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;URI_u3001URL_u4E0EURN&quot;&gt;&lt;a href=&quot;#URI_u3001URL_u4E0EURN&quot; class=&quot;headerlink&quot; title=&quot;URI、URL与URN&quot;&gt;&lt;/a&gt;URI、URL与URN&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;URI：Uniform Resource Identifier，统一资源标识符；&lt;/li&gt;
&lt;li&gt;URL：Uniform Resource Locator，统一资源定位符；&lt;/li&gt;
&lt;li&gt;URN：Uniform Resource Name，统一资源名称。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;URL 与 URN 是 URI 的子集，它们之间的关系如下图。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://qiniu.ursb.me/image/2016071001.png-800.jpg&quot; alt=&quot;URI、URL与URN&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;URL_u7684_u7EC4_u6210&quot;&gt;&lt;a href=&quot;#URL_u7684_u7EC4_u6210&quot; class=&quot;headerlink&quot; title=&quot;URL的组成&quot;&gt;&lt;/a&gt;URL的组成&lt;/h2&gt;&lt;p&gt;下面几个是简单的 URL：&lt;/p&gt;
&lt;figure class=&quot;highlight dts&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;http:&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;//ursb.me&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;http:&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;//ursb.me/archives/&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;http:&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;//ursb.me/archives/search?q=URL&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;任何这些网址可以输入到您的浏览器的地址栏，告诉它加载相关联的页面与资源。&lt;/p&gt;
&lt;p&gt;一个网址是由不同的部分组成，一些是强制性的和还有一些是可选的。接下来通过这个 URL 距离说一下各部分的含义与作用：&lt;/p&gt;
&lt;figure class=&quot;highlight crystal&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;http:&lt;/span&gt;/&lt;span class=&quot;regexp&quot;&gt;/www.example.com:80/path&lt;/span&gt;&lt;span class=&quot;regexp&quot;&gt;/to/myfile&lt;/span&gt;.html?key1=value1&amp;amp;key2=value2&lt;span class=&quot;comment&quot;&gt;#SomewhereInTheDocument&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;u534F_u8BAE_uFF08Protocol_uFF09&quot;&gt;&lt;a href=&quot;#u534F_u8BAE_uFF08Protocol_uFF09&quot; class=&quot;headerlink&quot; title=&quot;协议（Protocol）&quot;&gt;&lt;/a&gt;协议（Protocol）&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://qiniu.ursb.me/image/2016071002.png&quot; alt=&quot;Protocol&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;http://&lt;/code&gt;是协议部分，表示浏览器使用 &lt;strong&gt;HTTP 协议&lt;/strong&gt;对 URL 进行处理。当然还有其他的协议，如&lt;code&gt;mailto://&lt;/code&gt;代表的是使用邮件客户端打开，&lt;code&gt;ftp://&lt;/code&gt;则是使用 &lt;strong&gt;FTP 协议&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&quot;u57DF_u540D_uFF08Domain_Name_uFF09&quot;&gt;&lt;a href=&quot;#u57DF_u540D_uFF08Domain_Name_uFF09&quot; class=&quot;headerlink&quot; title=&quot;域名（Domain Name）&quot;&gt;&lt;/a&gt;域名（Domain Name）&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://qiniu.ursb.me/image/2016071003.png&quot; alt=&quot;Domain Name&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;www.example.com&lt;/code&gt;是一个域名，也可以使用 IP 地址。浏览器直接指向域名所在的 Web 服务器。&lt;/p&gt;
&lt;h3 id=&quot;u7AEF_u53E3_uFF08Port_uFF09&quot;&gt;&lt;a href=&quot;#u7AEF_u53E3_uFF08Port_uFF09&quot; class=&quot;headerlink&quot; title=&quot;端口（Port）&quot;&gt;&lt;/a&gt;端口（Port）&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://qiniu.ursb.me/image/2016071004.png&quot; alt=&quot;Port&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;:80&lt;/code&gt;是端口。它表示用于访问 Web 服务器上的&lt;strong&gt;“gate”&lt;/strong&gt;。通常如果 Web 服务器使用 HTTP 协议，端口可以省略（HTTP 默认 80 端口，HTTPS 默认 443 端口）。&lt;/p&gt;
&lt;h3 id=&quot;u6587_u4EF6_u8DEF_u5F84_uFF08Path_to_the_file_uFF09&quot;&gt;&lt;a href=&quot;#u6587_u4EF6_u8DEF_u5F84_uFF08Path_to_the_file_uFF09&quot; class=&quot;headerlink&quot; title=&quot;文件路径（Path to the file）&quot;&gt;&lt;/a&gt;文件路径（Path to the file）&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://qiniu.ursb.me/image/2016071005.png&quot; alt=&quot;Path to the file&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/path/to/myfile.html&lt;/code&gt;是 Web 服务器上的资源路径。在 Web 的早期，一个像这样的路径表示 Web 服务器上的物理文件位置。如今，它主要是一个抽象的Web服务器处理，没有任何物理现实。&lt;/p&gt;
&lt;h3 id=&quot;u53C2_u6570_uFF08Parameters_uFF09&quot;&gt;&lt;a href=&quot;#u53C2_u6570_uFF08Parameters_uFF09&quot; class=&quot;headerlink&quot; title=&quot;参数（Parameters）&quot;&gt;&lt;/a&gt;参数（Parameters）&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://qiniu.ursb.me/image/2016071006.png&quot; alt=&quot;Parameters&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;?key1=value1&amp;amp;key2=value2&lt;/code&gt;提供 Web 服务器的额外参数。这些参数是&lt;code&gt;&amp;amp;&lt;/code&gt;分隔的&lt;strong&gt;键/值对&lt;/strong&gt;的列表。在返回资源之前，Web 服务器可以使用这些参数做额外的工作。每个 Web 服务器都有自己的有关参数的规则，而唯一可靠的方法来知道一个特定的 Web 服务器是否处理参数是通过询问 Web 服务器所有者。&lt;/p&gt;
&lt;h3 id=&quot;u951A_u70B9_uFF08Anchor_uFF09&quot;&gt;&lt;a href=&quot;#u951A_u70B9_uFF08Anchor_uFF09&quot; class=&quot;headerlink&quot; title=&quot;锚点（Anchor）&quot;&gt;&lt;/a&gt;锚点（Anchor）&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://qiniu.ursb.me/image/2016071007.png&quot; alt=&quot;Anchor&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;#SomewhereInTheDocument&lt;/code&gt;叫做锚。它可以标记出以获取资源中的子资源，也就是该文档的某一个位置。&lt;/p&gt;
&lt;h2 id=&quot;u76F8_u5BF9_u8DEF_u5F84&quot;&gt;&lt;a href=&quot;#u76F8_u5BF9_u8DEF_u5F84&quot; class=&quot;headerlink&quot; title=&quot;相对路径&quot;&gt;&lt;/a&gt;相对路径&lt;/h2&gt;&lt;h3 id=&quot;Absolute_URLs_vs_relative_URLs&quot;&gt;&lt;a href=&quot;#Absolute_URLs_vs_relative_URLs&quot; class=&quot;headerlink&quot; title=&quot;Absolute URLs vs relative URLs&quot;&gt;&lt;/a&gt;Absolute URLs vs relative URLs&lt;/h3&gt;&lt;h4 id=&quot;u7EDD_u5BF9_u5730_u5740&quot;&gt;&lt;a href=&quot;#u7EDD_u5BF9_u5730_u5740&quot; class=&quot;headerlink&quot; title=&quot;绝对地址&quot;&gt;&lt;/a&gt;绝对地址&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Full URL (the same as the one we used before)&lt;/p&gt;
  &lt;figure class=&quot;highlight avrasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;https:&lt;/span&gt;//developer.mozilla&lt;span class=&quot;meta&quot;&gt;.org&lt;/span&gt;/en-US/docs/Learn&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Implicit protocol&lt;/p&gt;
  &lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//developer.mozilla.org/en-US/docs/Learn&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;  在 HTML 的一些标签的&lt;code&gt;src&lt;/code&gt;属性中比较常用，是一种省去协议部分的简写形式。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Implicit domain name&lt;/p&gt;
  &lt;figure class=&quot;highlight stata&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;/&lt;span class=&quot;keyword&quot;&gt;en&lt;/span&gt;-&lt;span class=&quot;keyword&quot;&gt;US&lt;/span&gt;/docs/Learn&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;在 UNIX 系统中的文件查找中也经常用到，首部的`/`代表根目录。
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&quot;u76F8_u5BF9_u5730_u5740&quot;&gt;&lt;a href=&quot;#u76F8_u5BF9_u5730_u5740&quot; class=&quot;headerlink&quot; title=&quot;相对地址&quot;&gt;&lt;/a&gt;相对地址&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Sub-resources&lt;/p&gt;
  &lt;figure class=&quot;highlight gradle&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;Skills&lt;span class=&quot;regexp&quot;&gt;/Infrastructure/&lt;/span&gt;Understanding_URLs&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;因为该地址不是以`/`打头的，所以浏览器将试图在一个包含当前资源的子目录中找到该文档。其等价于`./Skills/Infrastructure/Understanding_URLs`，即在首部加上`./`是一样的效果。
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Going back in the directory tree&lt;/p&gt;
  &lt;figure class=&quot;highlight arduino&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;../CSS/&lt;span class=&quot;built_in&quot;&gt;display&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;  &lt;code&gt;../&lt;/code&gt;在 UNIX 系统中经常用到，代表返回目前位置的上层目录。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;u76F8_u5BF9_URL__u7684_u89E3_u6790_u65B9_u5F0F&quot;&gt;&lt;a href=&quot;#u76F8_u5BF9_URL__u7684_u89E3_u6790_u65B9_u5F0F&quot; class=&quot;headerlink&quot; title=&quot;相对 URL 的解析方式&quot;&gt;&lt;/a&gt;相对 URL 的解析方式&lt;/h3&gt;&lt;p&gt;首先先明确两个概念：&lt;strong&gt;相对 URL&lt;/strong&gt; 与 &lt;strong&gt;基础 URL&lt;/strong&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;相对 URL&lt;/strong&gt;：不完整的 URL。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;基础 URL&lt;/strong&gt;：必须要有一个参考点的 URL。 &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;相对 URL 的解析具体分为以下两步：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;找到基础 URL&lt;br&gt; &lt;img src=&quot;http://qiniu.ursb.me/image/2016071008.png-800.jpg&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;ol&gt;
&lt;li&gt;将相对URL转换成绝对URL&lt;br&gt; &lt;img src=&quot;http://qiniu.ursb.me/image/2016071009.png-800.jpg&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;必备基础：掌握了 HTML 基础。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;u6982_u8FF0&quot;&gt;&lt;a href=&quot;#u6982_u8FF0&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;h3 id=&quot;URL_u7684_u6982_u5FF5&quot;&gt;&lt;a href=&quot;#URL_u7684_u6982_u5FF5&quot; class=&quot;headerlink&quot; title=&quot;URL的概念&quot;&gt;&lt;/a&gt;URL的概念&lt;/h3&gt;&lt;p&gt;URL，Uniform Resource Locator，统一资源定位符，它是一个网页的关键概念，它是浏览器使用的机制来检索Web上的任何已发布的资源。&lt;/p&gt;
&lt;p&gt;一个网址无非是一个给定的独特的资源在网络上的地址。在理论上，每个有效的网址指向一个独特的资源。这些资源可以是一个HTML页面，一个CSS文件，图像，等等。在实践中，也有一些例外，最常见的是一个URL指向不再存在或已移动的资源。作为由Web服务器表示的资源和网址本身是由Web服务器处理的，它是由Web服务器的所有者来仔细管理该资源及其相关的网址。&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="http://ursb.me/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Before Coding" scheme="http://ursb.me/tags/Before-Coding/"/>
    
  </entry>
  
</feed>
